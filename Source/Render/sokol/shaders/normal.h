#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc --input normal_texture.glsl --output normal.h --slang glsl330:glsl300es:hlsl5:wgsl:metal_macos:metal_ios:metal_sim --format=sokol --reflection --ifdef --module normal

    Overview:

        Shader program 'program':
            Get shader desc: normal_program_shader_desc(sg_query_backend());
            Vertex shader: vs
                Attribute slots:
                    ATTR_normal_vs_vs_position = 0
                    ATTR_normal_vs_vs_normal = 1
                    ATTR_normal_vs_vs_texcoord0 = 2
                Uniform block 'normal_texture_vs_params':
                    C struct: normal_normal_texture_vs_params_t
                    Bind slot: SLOT_normal_normal_texture_vs_params = 0
            Fragment shader: fs
                Uniform block 'normal_texture_fs_params':
                    C struct: normal_normal_texture_fs_params_t
                    Bind slot: SLOT_normal_normal_texture_fs_params = 0
                Image 'un_tex0':
                    Type: SG_IMAGETYPE_2D
                    Sample Type: SG_IMAGESAMPLETYPE_FLOAT
                    Bind slot: SLOT_normal_un_tex0 = 0
                Sampler 'un_sampler0':
                    Type: SG_SAMPLERTYPE_FILTERING
                    Bind slot: SLOT_normal_un_sampler0 = 0
                Image Sampler Pair 'un_tex0_un_sampler0':
                    Image: un_tex0
                    Sampler: un_sampler0


    Shader descriptor structs:

        sg_shader program = sg_make_shader(normal_program_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_normal_vs_vs_position] = { ... },
                    [ATTR_normal_vs_vs_normal] = { ... },
                    [ATTR_normal_vs_vs_texcoord0] = { ... },
                },
            },
            ...});


    Image bind slots, use as index in sg_bindings.vs.images[] or .fs.images[]

        SLOT_normal_un_tex0 = 0;

    Sampler bind slots, use as index in sg_bindings.vs.sampler[] or .fs.samplers[]

        SLOT_normal_un_sampler0 = 0;

    Bind slot and C-struct for uniform block 'normal_texture_vs_params':

        normal_normal_texture_vs_params_t normal_texture_vs_params = {
            .un_mvp = ...;
            .model = ...;
            .tex0_mat = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_normal_normal_texture_vs_params, &SG_RANGE(normal_texture_vs_params));

    Bind slot and C-struct for uniform block 'normal_texture_fs_params':

        normal_normal_texture_fs_params_t normal_texture_fs_params = {
            .diffuse = ...;
            .ambient = ...;
            .specular = ...;
            .emissive = ...;
            .light_dir = ...;
            .light_diffuse = ...;
            .light_ambient = ...;
            .light_specular = ...;
            .spec_power = ...;
            .un_alpha_test = ...;
            .material = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_normal_normal_texture_fs_params, &SG_RANGE(normal_texture_fs_params));

*/
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stddef.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_normal_vs_vs_position (0)
#define ATTR_normal_vs_vs_normal (1)
#define ATTR_normal_vs_vs_texcoord0 (2)
#define SLOT_normal_un_tex0 (0)
#define SLOT_normal_un_sampler0 (0)
#define SLOT_normal_normal_texture_vs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct normal_normal_texture_vs_params_t {
    Mat4f un_mvp;
    Mat4f model;
    Mat4f tex0_mat;
} normal_normal_texture_vs_params_t;
#pragma pack(pop)
#define SLOT_normal_normal_texture_fs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct normal_normal_texture_fs_params_t {
    float diffuse[4];
    float ambient[4];
    float specular[4];
    float emissive[4];
    float light_dir[3];
    uint8_t _pad_76[4];
    float light_diffuse[3];
    uint8_t _pad_92[4];
    float light_ambient[3];
    uint8_t _pad_108[4];
    float light_specular[3];
    float spec_power;
    float un_alpha_test;
    int material;
    uint8_t _pad_136[8];
} normal_normal_texture_fs_params_t;
#pragma pack(pop)
#if defined(SOKOL_GLCORE33)
/*
    #version 330
    
    uniform vec4 normal_texture_vs_params[12];
    layout(location = 0) in vec3 vs_position;
    out vec3 fs_normal;
    layout(location = 1) in vec3 vs_normal;
    out vec2 fs_uv0;
    layout(location = 2) in vec2 vs_texcoord0;
    out vec3 fs_position;
    
    void main()
    {
        gl_Position = mat4(normal_texture_vs_params[0], normal_texture_vs_params[1], normal_texture_vs_params[2], normal_texture_vs_params[3]) * vec4(vs_position, 1.0);
        mat4 _39 = mat4(normal_texture_vs_params[4], normal_texture_vs_params[5], normal_texture_vs_params[6], normal_texture_vs_params[7]);
        fs_normal = (_39 * vec4(vs_normal, 0.0)).xyz;
        fs_uv0 = (mat4(normal_texture_vs_params[8], normal_texture_vs_params[9], normal_texture_vs_params[10], normal_texture_vs_params[11]) * vec4(vs_texcoord0, 1.0, 1.0)).xy;
        fs_position = (_39 * vec4(vs_position, 0.0)).xyz;
    }
    
*/
static const char normal_vs_source_glsl330[839] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x73,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x33,0x20,0x76,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6f,
    0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x73,0x5f,
    0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,
    0x65,0x63,0x33,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,
    0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x30,0x5d,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x34,0x28,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x33,
    0x39,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x34,0x5d,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,
    0x5d,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x28,0x5f,
    0x33,0x39,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x76,0x73,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x3d,0x20,0x28,0x6d,0x61,
    0x74,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x2c,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,0x2c,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,0x5d,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,
    0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x2c,0x20,0x31,0x2e,
    0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,
    0x5f,0x33,0x39,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x76,0x73,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,
    0x7a,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    struct normal_texture_fs_params
    {
        vec4 diffuse;
        vec4 ambient;
        vec4 specular;
        vec4 emissive;
        vec3 light_dir;
        vec3 light_diffuse;
        vec3 light_ambient;
        vec3 light_specular;
        float spec_power;
        float un_alpha_test;
        int material;
    };
    
    uniform normal_texture_fs_params _127;
    
    uniform sampler2D un_tex0_un_sampler0;
    
    layout(location = 0) out vec4 frag_color;
    in vec2 fs_uv0;
    in vec3 fs_position;
    in vec3 fs_normal;
    
    vec4 phong(vec3 pos, vec3 nrm, vec3 l, vec3 eye, vec3 l_ambient, vec3 l_diffuse, vec3 l_specular, vec3 ambient, vec3 diffuse, vec3 specular, float spec_power)
    {
        vec3 _47 = normalize(nrm);
        float _58 = max(dot(_47, l), 0.0);
        return vec4((l_ambient * ambient + ((l_diffuse * diffuse) * _58)) + ((l_specular * specular) * (pow(max(dot(reflect(-l, _47), normalize(eye - pos)), 0.0), spec_power) * _58)), 1.0);
    }
    
    vec4 gamma(vec4 c)
    {
        return vec4(pow(c.xyz, vec3(0.4545454680919647216796875)), c.w);
    }
    
    void main()
    {
        frag_color = texture(un_tex0_un_sampler0, fs_uv0);
        if (_127.material > 0)
        {
            vec3 param = fs_position;
            vec3 param_1 = fs_normal;
            vec3 param_2 = -_127.light_dir;
            vec3 param_3 = vec3(0.0);
            vec3 param_4 = _127.light_ambient;
            vec3 param_5 = _127.light_diffuse;
            vec3 param_6 = _127.light_specular;
            vec3 param_7 = _127.ambient.xyz;
            vec3 param_8 = _127.diffuse.xyz;
            vec3 param_9 = _127.specular.xyz;
            float param_10 = _127.spec_power;
            vec4 param_11 = phong(param, param_1, param_2, param_3, param_4, param_5, param_6, param_7, param_8, param_9, param_10);
            frag_color *= gamma(param_11);
            frag_color.w *= _127.diffuse.w;
        }
        else
        {
            vec4 _197 = frag_color;
            vec3 _202 = _197.xyz * _127.ambient.xyz;
            frag_color.x = _202.x;
            frag_color.y = _202.y;
            frag_color.z = _202.z;
        }
        if (_127.un_alpha_test >= frag_color.w)
        {
            discard;
        }
    }
    
*/
static const char normal_fs_source_glsl330[2002] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x61,0x6d,0x62,0x69,0x65,
    0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x73,0x70,0x65,
    0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,
    0x65,0x6d,0x69,0x73,0x73,0x69,0x76,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x73,0x70,0x65,
    0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x75,0x6e,0x5f,0x61,0x6c,0x70,0x68,0x61,0x5f,
    0x74,0x65,0x73,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6d,0x61,
    0x74,0x65,0x72,0x69,0x61,0x6c,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x5f,0x31,0x32,
    0x37,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x32,0x44,0x20,0x75,0x6e,0x5f,0x74,0x65,0x78,0x30,0x5f,0x75,0x6e,
    0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x30,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x73,
    0x5f,0x75,0x76,0x30,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x73,
    0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x33,0x20,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x0a,0x76,
    0x65,0x63,0x34,0x20,0x70,0x68,0x6f,0x6e,0x67,0x28,0x76,0x65,0x63,0x33,0x20,0x70,
    0x6f,0x73,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x72,0x6d,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x20,0x6c,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x65,0x79,0x65,0x2c,0x20,
    0x76,0x65,0x63,0x33,0x20,0x6c,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,
    0x76,0x65,0x63,0x33,0x20,0x6c,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x2c,0x20,
    0x76,0x65,0x63,0x33,0x20,0x6c,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2c,
    0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x76,
    0x65,0x63,0x33,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x34,0x37,0x20,0x3d,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6e,0x72,0x6d,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x38,0x20,0x3d,0x20,0x6d,
    0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x5f,0x34,0x37,0x2c,0x20,0x6c,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x6c,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,
    0x20,0x2a,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x20,0x2b,0x20,0x28,0x28,0x6c,
    0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x2a,0x20,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x29,0x20,0x2a,0x20,0x5f,0x35,0x38,0x29,0x29,0x20,0x2b,0x20,0x28,0x28,
    0x6c,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x20,0x2a,0x20,0x73,0x70,0x65,
    0x63,0x75,0x6c,0x61,0x72,0x29,0x20,0x2a,0x20,0x28,0x70,0x6f,0x77,0x28,0x6d,0x61,
    0x78,0x28,0x64,0x6f,0x74,0x28,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,0x2d,0x6c,
    0x2c,0x20,0x5f,0x34,0x37,0x29,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x65,0x79,0x65,0x20,0x2d,0x20,0x70,0x6f,0x73,0x29,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x2c,0x20,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x29,
    0x20,0x2a,0x20,0x5f,0x35,0x38,0x29,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x76,0x65,0x63,0x34,0x20,0x67,0x61,0x6d,0x6d,0x61,0x28,0x76,0x65,
    0x63,0x34,0x20,0x63,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x77,0x28,0x63,0x2e,0x78,0x79,
    0x7a,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x34,0x35,0x34,0x35,0x34,0x35,
    0x34,0x36,0x38,0x30,0x39,0x31,0x39,0x36,0x34,0x37,0x32,0x31,0x36,0x37,0x39,0x36,
    0x38,0x37,0x35,0x29,0x29,0x2c,0x20,0x63,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x75,0x6e,0x5f,0x74,0x65,0x78,0x30,0x5f,0x75,
    0x6e,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x30,0x2c,0x20,0x66,0x73,0x5f,0x75,
    0x76,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,
    0x37,0x2e,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x20,0x3e,0x20,0x30,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x66,
    0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,
    0x20,0x2d,0x5f,0x31,0x32,0x37,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3d,
    0x20,0x5f,0x31,0x32,0x37,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x73,0x70,0x65,0x63,
    0x75,0x6c,0x61,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x31,0x32,
    0x37,0x2e,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x38,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,0x5f,
    0x31,0x32,0x37,0x2e,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2e,0x78,0x79,0x7a,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,
    0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x31,0x20,0x3d,0x20,0x70,0x68,0x6f,0x6e,0x67,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x36,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x2a,0x3d,0x20,0x67,0x61,0x6d,0x6d,0x61,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x3d,0x20,0x5f,0x31,0x32,0x37,
    0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,
    0x39,0x37,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,
    0x30,0x32,0x20,0x3d,0x20,0x5f,0x31,0x39,0x37,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,
    0x5f,0x31,0x32,0x37,0x2e,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2e,0x78,0x79,0x7a,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x32,0x30,0x32,0x2e,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x32,0x30,0x32,0x2e,0x79,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x2e,0x7a,0x20,0x3d,0x20,0x5f,0x32,0x30,0x32,0x2e,0x7a,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,
    0x37,0x2e,0x75,0x6e,0x5f,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,0x65,0x73,0x74,0x20,
    0x3e,0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,
    0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x7d,0x0a,
    0x0a,0x00,
};
#endif /* SOKOL_GLCORE33 */
#if defined(SOKOL_GLES3)
/*
    #version 300 es
    
    uniform vec4 normal_texture_vs_params[12];
    layout(location = 0) in vec3 vs_position;
    out vec3 fs_normal;
    layout(location = 1) in vec3 vs_normal;
    out vec2 fs_uv0;
    layout(location = 2) in vec2 vs_texcoord0;
    out vec3 fs_position;
    
    void main()
    {
        gl_Position = mat4(normal_texture_vs_params[0], normal_texture_vs_params[1], normal_texture_vs_params[2], normal_texture_vs_params[3]) * vec4(vs_position, 1.0);
        mat4 _39 = mat4(normal_texture_vs_params[4], normal_texture_vs_params[5], normal_texture_vs_params[6], normal_texture_vs_params[7]);
        fs_normal = (_39 * vec4(vs_normal, 0.0)).xyz;
        fs_uv0 = (mat4(normal_texture_vs_params[8], normal_texture_vs_params[9], normal_texture_vs_params[10], normal_texture_vs_params[11]) * vec4(vs_texcoord0, 1.0, 1.0)).xy;
        fs_position = (_39 * vec4(vs_position, 0.0)).xyz;
    }
    
*/
static const char normal_vs_source_glsl300es[842] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x66,
    0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x73,0x5f,0x75,0x76,
    0x30,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,
    0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x5d,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,
    0x76,0x65,0x63,0x34,0x28,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,
    0x20,0x5f,0x33,0x39,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x35,0x5d,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,
    0x5d,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,
    0x20,0x28,0x5f,0x33,0x39,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x76,0x73,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x3d,0x20,
    0x28,0x6d,0x61,0x74,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,
    0x5d,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,0x2c,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,0x5d,0x2c,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,
    0x63,0x34,0x28,0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x28,0x5f,0x33,0x39,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x76,0x73,
    0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,
    0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    struct normal_texture_fs_params
    {
        highp vec4 diffuse;
        highp vec4 ambient;
        highp vec4 specular;
        highp vec4 emissive;
        highp vec3 light_dir;
        highp vec3 light_diffuse;
        highp vec3 light_ambient;
        highp vec3 light_specular;
        highp float spec_power;
        highp float un_alpha_test;
        int material;
    };
    
    uniform normal_texture_fs_params _127;
    
    uniform highp sampler2D un_tex0_un_sampler0;
    
    layout(location = 0) out highp vec4 frag_color;
    in highp vec2 fs_uv0;
    in highp vec3 fs_position;
    in highp vec3 fs_normal;
    
    highp vec4 phong(highp vec3 pos, highp vec3 nrm, highp vec3 l, highp vec3 eye, highp vec3 l_ambient, highp vec3 l_diffuse, highp vec3 l_specular, highp vec3 ambient, highp vec3 diffuse, highp vec3 specular, highp float spec_power)
    {
        highp vec3 _47 = normalize(nrm);
        highp float _58 = max(dot(_47, l), 0.0);
        return vec4((l_ambient * ambient + ((l_diffuse * diffuse) * _58)) + ((l_specular * specular) * (pow(max(dot(reflect(-l, _47), normalize(eye - pos)), 0.0), spec_power) * _58)), 1.0);
    }
    
    highp vec4 gamma(highp vec4 c)
    {
        return vec4(pow(c.xyz, vec3(0.4545454680919647216796875)), c.w);
    }
    
    void main()
    {
        frag_color = texture(un_tex0_un_sampler0, fs_uv0);
        if (_127.material > 0)
        {
            highp vec3 param = fs_position;
            highp vec3 param_1 = fs_normal;
            highp vec3 param_2 = -_127.light_dir;
            highp vec3 param_3 = vec3(0.0);
            highp vec3 param_4 = _127.light_ambient;
            highp vec3 param_5 = _127.light_diffuse;
            highp vec3 param_6 = _127.light_specular;
            highp vec3 param_7 = _127.ambient.xyz;
            highp vec3 param_8 = _127.diffuse.xyz;
            highp vec3 param_9 = _127.specular.xyz;
            highp float param_10 = _127.spec_power;
            highp vec4 param_11 = phong(param, param_1, param_2, param_3, param_4, param_5, param_6, param_7, param_8, param_9, param_10);
            frag_color *= gamma(param_11);
            frag_color.w *= _127.diffuse.w;
        }
        else
        {
            highp vec4 _197 = frag_color;
            highp vec3 _202 = _197.xyz * _127.ambient.xyz;
            frag_color.x = _202.x;
            frag_color.y = _202.y;
            frag_color.z = _202.z;
        }
        if (_127.un_alpha_test >= frag_color.w)
        {
            discard;
        }
    }
    
*/
static const char normal_fs_source_glsl300es[2321] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x65,0x6d,0x69,0x73,0x73,0x69,0x76,
    0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,
    0x74,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x73,0x70,
    0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,
    0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x75,0x6e,0x5f,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,0x65,0x73,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6d,0x61,0x74,0x65,0x72,
    0x69,0x61,0x6c,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x5f,0x31,0x32,0x37,0x3b,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x75,0x6e,0x5f,0x74,0x65,0x78,0x30,
    0x5f,0x75,0x6e,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x30,0x3b,0x0a,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,
    0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x73,0x5f,
    0x75,0x76,0x30,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x73,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x34,0x20,0x70,0x68,0x6f,0x6e,0x67,0x28,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x72,0x6d,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x65,0x79,0x65,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x6c,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x5f,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x6c,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2c,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x73,
    0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x5f,0x34,0x37,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x6e,0x72,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x38,0x20,0x3d,0x20,0x6d,0x61,
    0x78,0x28,0x64,0x6f,0x74,0x28,0x5f,0x34,0x37,0x2c,0x20,0x6c,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x76,0x65,0x63,0x34,0x28,0x28,0x6c,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x20,
    0x2a,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x20,0x2b,0x20,0x28,0x28,0x6c,0x5f,
    0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x2a,0x20,0x64,0x69,0x66,0x66,0x75,0x73,
    0x65,0x29,0x20,0x2a,0x20,0x5f,0x35,0x38,0x29,0x29,0x20,0x2b,0x20,0x28,0x28,0x6c,
    0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x20,0x2a,0x20,0x73,0x70,0x65,0x63,
    0x75,0x6c,0x61,0x72,0x29,0x20,0x2a,0x20,0x28,0x70,0x6f,0x77,0x28,0x6d,0x61,0x78,
    0x28,0x64,0x6f,0x74,0x28,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,0x2d,0x6c,0x2c,
    0x20,0x5f,0x34,0x37,0x29,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x65,0x79,0x65,0x20,0x2d,0x20,0x70,0x6f,0x73,0x29,0x29,0x2c,0x20,0x30,0x2e,
    0x30,0x29,0x2c,0x20,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x29,0x20,
    0x2a,0x20,0x5f,0x35,0x38,0x29,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x67,0x61,0x6d,
    0x6d,0x61,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x76,0x65,
    0x63,0x34,0x28,0x70,0x6f,0x77,0x28,0x63,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x28,0x30,0x2e,0x34,0x35,0x34,0x35,0x34,0x35,0x34,0x36,0x38,0x30,0x39,
    0x31,0x39,0x36,0x34,0x37,0x32,0x31,0x36,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x29,
    0x2c,0x20,0x63,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x28,0x75,0x6e,0x5f,0x74,0x65,0x78,0x30,0x5f,0x75,0x6e,0x5f,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x30,0x2c,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,0x37,0x2e,0x6d,0x61,0x74,
    0x65,0x72,0x69,0x61,0x6c,0x20,0x3e,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x20,0x3d,0x20,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x2d,0x5f,
    0x31,0x32,0x37,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,
    0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x34,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,
    0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x35,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x36,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x61,0x6d,0x62,
    0x69,0x65,0x6e,0x74,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x39,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x73,0x70,0x65,0x63,0x75,
    0x6c,0x61,0x72,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x73,0x70,0x65,
    0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x31,0x20,0x3d,0x20,0x70,0x68,0x6f,0x6e,0x67,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x37,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x39,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x2a,0x3d,0x20,0x67,0x61,0x6d,0x6d,0x61,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x3d,0x20,0x5f,
    0x31,0x32,0x37,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x2e,0x77,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x39,0x37,0x20,0x3d,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x30,
    0x32,0x20,0x3d,0x20,0x5f,0x31,0x39,0x37,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x5f,
    0x31,0x32,0x37,0x2e,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2e,0x78,0x79,0x7a,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x32,0x30,0x32,0x2e,0x78,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x32,0x30,0x32,0x2e,0x79,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x7a,0x20,0x3d,0x20,0x5f,0x32,0x30,0x32,0x2e,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,0x37,
    0x2e,0x75,0x6e,0x5f,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,0x65,0x73,0x74,0x20,0x3e,
    0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,
    0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
#endif /* SOKOL_GLES3 */
#if defined(SOKOL_D3D11)
/*
    cbuffer normal_texture_vs_params : register(b0)
    {
        row_major float4x4 _19_un_mvp : packoffset(c0);
        row_major float4x4 _19_model : packoffset(c4);
        row_major float4x4 _19_tex0_mat : packoffset(c8);
    };
    
    
    static float4 gl_Position;
    static float3 vs_position;
    static float3 fs_normal;
    static float3 vs_normal;
    static float2 fs_uv0;
    static float2 vs_texcoord0;
    static float3 fs_position;
    
    struct SPIRV_Cross_Input
    {
        float3 vs_position : TEXCOORD0;
        float3 vs_normal : TEXCOORD1;
        float2 vs_texcoord0 : TEXCOORD2;
    };
    
    struct SPIRV_Cross_Output
    {
        float3 fs_normal : TEXCOORD0;
        float2 fs_uv0 : TEXCOORD1;
        float3 fs_position : TEXCOORD2;
        float4 gl_Position : SV_Position;
    };
    
    void vert_main()
    {
        gl_Position = mul(float4(vs_position, 1.0f), _19_un_mvp);
        fs_normal = mul(float4(vs_normal, 0.0f), _19_model).xyz;
        fs_uv0 = mul(float4(vs_texcoord0, 1.0f, 1.0f), _19_tex0_mat).xy;
        fs_position = mul(float4(vs_position, 0.0f), _19_model).xyz;
    }
    
    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        vs_position = stage_input.vs_position;
        vs_normal = stage_input.vs_normal;
        vs_texcoord0 = stage_input.vs_texcoord0;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.fs_normal = fs_normal;
        stage_output.fs_uv0 = fs_uv0;
        stage_output.fs_position = fs_position;
        return stage_output;
    }
*/
static const char normal_vs_source_hlsl5[1410] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x31,0x39,0x5f,0x75,0x6e,0x5f,
    0x6d,0x76,0x70,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,
    0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x31,0x39,
    0x5f,0x6d,0x6f,0x64,0x65,0x6c,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,
    0x73,0x65,0x74,0x28,0x63,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,
    0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,
    0x5f,0x31,0x39,0x5f,0x74,0x65,0x78,0x30,0x5f,0x6d,0x61,0x74,0x20,0x3a,0x20,0x70,
    0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x38,0x29,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,
    0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x73,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x76,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,
    0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x73,0x74,
    0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,
    0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x76,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,
    0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,
    0x64,0x30,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x73,0x5f,
    0x75,0x76,0x30,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,
    0x52,0x44,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x53,0x56,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,
    0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x76,
    0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x66,
    0x29,0x2c,0x20,0x5f,0x31,0x39,0x5f,0x75,0x6e,0x5f,0x6d,0x76,0x70,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,
    0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x2c,0x20,0x5f,0x31,0x39,
    0x5f,0x6d,0x6f,0x64,0x65,0x6c,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,
    0x30,0x2c,0x20,0x31,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,
    0x5f,0x31,0x39,0x5f,0x74,0x65,0x78,0x30,0x5f,0x6d,0x61,0x74,0x29,0x2e,0x78,0x79,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x76,
    0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,0x2e,0x30,0x66,
    0x29,0x2c,0x20,0x5f,0x31,0x39,0x5f,0x6d,0x6f,0x64,0x65,0x6c,0x29,0x2e,0x78,0x79,
    0x7a,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,
    0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,
    0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x76,0x73,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x73,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x69,0x6e,0x70,0x75,0x74,0x2e,0x76,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,
    0x30,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,
    0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,
    0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,
    0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,
    0x2e,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x66,0x73,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,
    0x3d,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x73,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,
    0x0a,0x00,
};
/*
    cbuffer normal_texture_fs_params : register(b0)
    {
        float4 _127_diffuse : packoffset(c0);
        float4 _127_ambient : packoffset(c1);
        float4 _127_specular : packoffset(c2);
        float4 _127_emissive : packoffset(c3);
        float3 _127_light_dir : packoffset(c4);
        float3 _127_light_diffuse : packoffset(c5);
        float3 _127_light_ambient : packoffset(c6);
        float3 _127_light_specular : packoffset(c7);
        float _127_spec_power : packoffset(c7.w);
        float _127_un_alpha_test : packoffset(c8);
        int _127_material : packoffset(c8.y);
    };
    
    Texture2D<float4> un_tex0 : register(t0);
    SamplerState un_sampler0 : register(s0);
    
    static float4 frag_color;
    static float2 fs_uv0;
    static float3 fs_position;
    static float3 fs_normal;
    
    struct SPIRV_Cross_Input
    {
        float3 fs_normal : TEXCOORD0;
        float2 fs_uv0 : TEXCOORD1;
        float3 fs_position : TEXCOORD2;
    };
    
    struct SPIRV_Cross_Output
    {
        float4 frag_color : SV_Target0;
    };
    
    float4 phong(float3 pos, float3 nrm, float3 l, float3 eye, float3 l_ambient, float3 l_diffuse, float3 l_specular, float3 ambient, float3 diffuse, float3 specular, float spec_power)
    {
        float3 _47 = normalize(nrm);
        float _58 = max(dot(_47, l), 0.0f);
        return float4(mad(l_ambient, ambient, (l_diffuse * diffuse) * _58) + ((l_specular * specular) * (pow(max(dot(reflect(-l, _47), normalize(eye - pos)), 0.0f), spec_power) * _58)), 1.0f);
    }
    
    float4 gamma(float4 c)
    {
        return float4(pow(c.xyz, 0.4545454680919647216796875f.xxx), c.w);
    }
    
    void frag_main()
    {
        frag_color = un_tex0.Sample(un_sampler0, fs_uv0);
        if (_127_material > 0)
        {
            float3 param = fs_position;
            float3 param_1 = fs_normal;
            float3 param_2 = -_127_light_dir;
            float3 param_3 = 0.0f.xxx;
            float3 param_4 = _127_light_ambient;
            float3 param_5 = _127_light_diffuse;
            float3 param_6 = _127_light_specular;
            float3 param_7 = _127_ambient.xyz;
            float3 param_8 = _127_diffuse.xyz;
            float3 param_9 = _127_specular.xyz;
            float param_10 = _127_spec_power;
            float4 param_11 = phong(param, param_1, param_2, param_3, param_4, param_5, param_6, param_7, param_8, param_9, param_10);
            frag_color *= gamma(param_11);
            frag_color.w *= _127_diffuse.w;
        }
        else
        {
            float4 _197 = frag_color;
            float3 _202 = _197.xyz * _127_ambient.xyz;
            frag_color.x = _202.x;
            frag_color.y = _202.y;
            frag_color.z = _202.z;
        }
        if (_127_un_alpha_test >= frag_color.w)
        {
            discard;
        }
    }
    
    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        fs_uv0 = stage_input.fs_uv0;
        fs_position = stage_input.fs_position;
        fs_normal = stage_input.fs_normal;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.frag_color = frag_color;
        return stage_output;
    }
*/
static const char normal_fs_source_hlsl5[2829] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x32,
    0x37,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x32,0x37,0x5f,0x61,0x6d,0x62,0x69,
    0x65,0x6e,0x74,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x63,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x5f,0x31,0x32,0x37,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x20,0x3a,
    0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x32,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x32,0x37,
    0x5f,0x65,0x6d,0x69,0x73,0x73,0x69,0x76,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x31,0x32,0x37,0x5f,0x6c,0x69,0x67,0x68,
    0x74,0x5f,0x64,0x69,0x72,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x28,0x63,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x5f,0x31,0x32,0x37,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x28,0x63,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x5f,0x31,0x32,0x37,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,
    0x62,0x69,0x65,0x6e,0x74,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x28,0x63,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x5f,0x31,0x32,0x37,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x73,0x70,
    0x65,0x63,0x75,0x6c,0x61,0x72,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,
    0x73,0x65,0x74,0x28,0x63,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x31,0x32,0x37,0x5f,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,
    0x65,0x72,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,
    0x63,0x37,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x31,0x32,0x37,0x5f,0x75,0x6e,0x5f,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,
    0x65,0x73,0x74,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x63,0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,
    0x32,0x37,0x5f,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x20,0x3a,0x20,0x70,0x61,
    0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x38,0x2e,0x79,0x29,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x3e,0x20,0x75,0x6e,0x5f,0x74,0x65,0x78,0x30,0x20,0x3a,0x20,
    0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x30,0x29,0x3b,0x0a,0x53,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x75,0x6e,0x5f,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x30,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,
    0x72,0x28,0x73,0x30,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x66,0x73,0x5f,0x75,0x76,0x30,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,
    0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,0x54,
    0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3a,0x20,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x68,0x6f,0x6e,
    0x67,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x6e,0x72,0x6d,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x6c,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x65,0x79,0x65,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x5f,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x5f,0x73,0x70,0x65,
    0x63,0x75,0x6c,0x61,0x72,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x6d,
    0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x73,0x70,
    0x65,0x63,0x75,0x6c,0x61,0x72,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x70,
    0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x34,0x37,0x20,0x3d,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6e,0x72,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x38,0x20,0x3d,0x20,0x6d,0x61,0x78,
    0x28,0x64,0x6f,0x74,0x28,0x5f,0x34,0x37,0x2c,0x20,0x6c,0x29,0x2c,0x20,0x30,0x2e,
    0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x6d,0x61,0x64,0x28,0x6c,0x5f,0x61,0x6d,0x62,
    0x69,0x65,0x6e,0x74,0x2c,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x28,
    0x6c,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x2a,0x20,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x29,0x20,0x2a,0x20,0x5f,0x35,0x38,0x29,0x20,0x2b,0x20,0x28,0x28,
    0x6c,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x20,0x2a,0x20,0x73,0x70,0x65,
    0x63,0x75,0x6c,0x61,0x72,0x29,0x20,0x2a,0x20,0x28,0x70,0x6f,0x77,0x28,0x6d,0x61,
    0x78,0x28,0x64,0x6f,0x74,0x28,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,0x2d,0x6c,
    0x2c,0x20,0x5f,0x34,0x37,0x29,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x65,0x79,0x65,0x20,0x2d,0x20,0x70,0x6f,0x73,0x29,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x66,0x29,0x2c,0x20,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,
    0x29,0x20,0x2a,0x20,0x5f,0x35,0x38,0x29,0x29,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x61,0x6d,0x6d,
    0x61,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,
    0x70,0x6f,0x77,0x28,0x63,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x30,0x2e,0x34,0x35,0x34,
    0x35,0x34,0x35,0x34,0x36,0x38,0x30,0x39,0x31,0x39,0x36,0x34,0x37,0x32,0x31,0x36,
    0x37,0x39,0x36,0x38,0x37,0x35,0x66,0x2e,0x78,0x78,0x78,0x29,0x2c,0x20,0x63,0x2e,
    0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x75,0x6e,0x5f,0x74,0x65,
    0x78,0x30,0x2e,0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x75,0x6e,0x5f,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x30,0x2c,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,0x37,0x5f,0x6d,0x61,0x74,
    0x65,0x72,0x69,0x61,0x6c,0x20,0x3e,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x66,0x73,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,
    0x3d,0x20,0x2d,0x5f,0x31,0x32,0x37,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,
    0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x30,0x2e,0x30,0x66,
    0x2e,0x78,0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,
    0x31,0x32,0x37,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,
    0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x5f,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x5f,0x61,0x6d,0x62,0x69,
    0x65,0x6e,0x74,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x20,
    0x3d,0x20,0x5f,0x31,0x32,0x37,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x2e,0x78,
    0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,0x5f,0x31,0x32,
    0x37,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2e,0x78,0x79,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x5f,0x73,0x70,
    0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x31,0x20,0x3d,0x20,0x70,0x68,0x6f,0x6e,0x67,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x36,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x2a,0x3d,0x20,0x67,0x61,0x6d,0x6d,0x61,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x3d,0x20,0x5f,0x31,0x32,0x37,
    0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x5f,0x31,0x39,0x37,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x5f,0x32,0x30,0x32,0x20,0x3d,0x20,0x5f,0x31,0x39,0x37,0x2e,0x78,0x79,
    0x7a,0x20,0x2a,0x20,0x5f,0x31,0x32,0x37,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,
    0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x32,0x30,
    0x32,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x32,0x30,0x32,
    0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x7a,0x20,0x3d,0x20,0x5f,0x32,0x30,0x32,0x2e,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x31,0x32,0x37,0x5f,0x75,0x6e,0x5f,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,
    0x65,0x73,0x74,0x20,0x3e,0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x77,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,
    0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,
    0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x66,0x73,0x5f,0x75,0x76,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x66,0x73,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x73,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x69,0x6e,0x70,0x75,0x74,0x2e,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,
    0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,
    0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
#endif /* SOKOL_D3D11 */
#if defined(SOKOL_METAL)
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct normal_texture_vs_params
    {
        float4x4 un_mvp;
        float4x4 model;
        float4x4 tex0_mat;
    };
    
    struct main0_out
    {
        float3 fs_normal [[user(locn0)]];
        float2 fs_uv0 [[user(locn1)]];
        float3 fs_position [[user(locn2)]];
        float4 gl_Position [[position]];
    };
    
    struct main0_in
    {
        float3 vs_position [[attribute(0)]];
        float3 vs_normal [[attribute(1)]];
        float2 vs_texcoord0 [[attribute(2)]];
    };
    
    vertex main0_out main0(main0_in in [[stage_in]], constant normal_texture_vs_params& _19 [[buffer(0)]])
    {
        main0_out out = {};
        out.gl_Position = _19.un_mvp * float4(in.vs_position, 1.0);
        out.fs_normal = (_19.model * float4(in.vs_normal, 0.0)).xyz;
        out.fs_uv0 = (_19.tex0_mat * float4(in.vs_texcoord0, 1.0, 1.0)).xy;
        out.fs_position = (_19.model * float4(in.vs_position, 0.0)).xyz;
        return out;
    }
    
*/
static const char normal_vs_source_metal_macos[910] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x75,0x6e,0x5f,0x6d,0x76,0x70,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6d,0x6f,0x64,0x65,
    0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,
    0x74,0x65,0x78,0x30,0x5f,0x6d,0x61,0x74,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,
    0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,
    0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x76,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,
    0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x30,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,
    0x28,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x65,0x72,0x74,0x65,
    0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,
    0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x61,0x6e,0x74,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,
    0x31,0x39,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,
    0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x5f,0x31,0x39,0x2e,0x75,0x6e,0x5f,0x6d,0x76,0x70,0x20,0x2a,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,
    0x28,0x5f,0x31,0x39,0x2e,0x6d,0x6f,0x64,0x65,0x6c,0x20,0x2a,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x76,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6f,0x75,0x74,0x2e,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x3d,0x20,0x28,0x5f,
    0x31,0x39,0x2e,0x74,0x65,0x78,0x30,0x5f,0x6d,0x61,0x74,0x20,0x2a,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x30,0x2c,0x20,0x31,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,
    0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x73,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x5f,0x31,0x39,0x2e,
    0x6d,0x6f,0x64,0x65,0x6c,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,
    0x6e,0x2e,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"
    
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct normal_texture_fs_params
    {
        float4 diffuse;
        float4 ambient;
        float4 specular;
        float4 emissive;
        float3 light_dir;
        float3 light_diffuse;
        float3 light_ambient;
        packed_float3 light_specular;
        float spec_power;
        float un_alpha_test;
        int material;
    };
    
    struct main0_out
    {
        float4 frag_color [[color(0)]];
    };
    
    struct main0_in
    {
        float3 fs_normal [[user(locn0)]];
        float2 fs_uv0 [[user(locn1)]];
        float3 fs_position [[user(locn2)]];
    };
    
    static inline __attribute__((always_inline))
    float4 phong(thread const float3& pos, thread const float3& nrm, thread const float3& l, thread const float3& eye, thread const float3& l_ambient, thread const float3& l_diffuse, thread const float3& l_specular, thread const float3& ambient, thread const float3& diffuse, thread const float3& specular, thread const float& spec_power)
    {
        float3 _47 = fast::normalize(nrm);
        float _58 = fast::max(dot(_47, l), 0.0);
        return float4(fma(l_ambient, ambient, (l_diffuse * diffuse) * _58) + ((l_specular * specular) * (pow(fast::max(dot(reflect(-l, _47), fast::normalize(eye - pos)), 0.0), spec_power) * _58)), 1.0);
    }
    
    static inline __attribute__((always_inline))
    float4 gamma(thread const float4& c)
    {
        return float4(pow(c.xyz, float3(0.4545454680919647216796875)), c.w);
    }
    
    fragment main0_out main0(main0_in in [[stage_in]], constant normal_texture_fs_params& _127 [[buffer(0)]], texture2d<float> un_tex0 [[texture(0)]], sampler un_sampler0 [[sampler(0)]])
    {
        main0_out out = {};
        out.frag_color = un_tex0.sample(un_sampler0, in.fs_uv0);
        if (_127.material > 0)
        {
            float3 param = in.fs_position;
            float3 param_1 = in.fs_normal;
            float3 param_2 = -_127.light_dir;
            float3 param_3 = float3(0.0);
            float3 param_4 = _127.light_ambient;
            float3 param_5 = _127.light_diffuse;
            float3 param_6 = float3(_127.light_specular);
            float3 param_7 = _127.ambient.xyz;
            float3 param_8 = _127.diffuse.xyz;
            float3 param_9 = _127.specular.xyz;
            float param_10 = _127.spec_power;
            float4 param_11 = phong(param, param_1, param_2, param_3, param_4, param_5, param_6, param_7, param_8, param_9, param_10);
            out.frag_color *= gamma(param_11);
            out.frag_color.w *= _127.diffuse.w;
        }
        else
        {
            float4 _197 = out.frag_color;
            float3 _202 = _197.xyz * _127.ambient.xyz;
            out.frag_color.x = _202.x;
            out.frag_color.y = _202.y;
            out.frag_color.z = _202.z;
        }
        if (_127.un_alpha_test >= out.frag_color.w)
        {
            discard_fragment();
        }
        return out;
    }
    
*/
static const char normal_fs_source_metal_macos[2768] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x65,0x6d,0x69,0x73,0x73,
    0x69,0x76,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x70,0x61,0x63,0x6b,0x65,0x64,0x5f,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x70,0x65,0x63,0x5f,
    0x70,0x6f,0x77,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x75,0x6e,0x5f,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,0x65,0x73,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,
    0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x73,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,
    0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x5b,0x5b,0x75,0x73,0x65,
    0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,
    0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,
    0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,
    0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,
    0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x68,0x6f,0x6e,
    0x67,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x70,0x6f,0x73,0x2c,0x20,0x74,0x68,0x72,0x65,
    0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,
    0x20,0x6e,0x72,0x6d,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,
    0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x2c,0x20,0x74,0x68,
    0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x26,0x20,0x65,0x79,0x65,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x5f,0x61,
    0x6d,0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x5f,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x5f,0x73,
    0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,
    0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x61,0x6d,
    0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,
    0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,
    0x61,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x26,0x20,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,
    0x65,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x5f,0x34,0x37,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6e,0x72,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x38,0x20,0x3d,0x20,0x66,0x61,0x73,
    0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x5f,0x34,0x37,0x2c,0x20,
    0x6c,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,0x6d,0x61,0x28,
    0x6c,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x61,0x6d,0x62,0x69,0x65,
    0x6e,0x74,0x2c,0x20,0x28,0x6c,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x2a,
    0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x29,0x20,0x2a,0x20,0x5f,0x35,0x38,0x29,
    0x20,0x2b,0x20,0x28,0x28,0x6c,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x20,
    0x2a,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x29,0x20,0x2a,0x20,0x28,0x70,
    0x6f,0x77,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,
    0x28,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,0x2d,0x6c,0x2c,0x20,0x5f,0x34,0x37,
    0x29,0x2c,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x65,0x79,0x65,0x20,0x2d,0x20,0x70,0x6f,0x73,0x29,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x2c,0x20,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,
    0x29,0x20,0x2a,0x20,0x5f,0x35,0x38,0x29,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,
    0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,
    0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,
    0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x61,0x6d,0x6d,0x61,0x28,0x74,0x68,
    0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x26,0x20,0x63,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x70,0x6f,0x77,0x28,0x63,0x2e,
    0x78,0x79,0x7a,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x34,0x35,
    0x34,0x35,0x34,0x35,0x34,0x36,0x38,0x30,0x39,0x31,0x39,0x36,0x34,0x37,0x32,0x31,
    0x36,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x29,0x2c,0x20,0x63,0x2e,0x77,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x32,0x37,0x20,0x5b,
    0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x75,
    0x6e,0x5f,0x74,0x65,0x78,0x30,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x75,
    0x6e,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x30,0x20,0x5b,0x5b,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,
    0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x75,0x6e,0x5f,0x74,0x65,0x78,
    0x30,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,0x28,0x75,0x6e,0x5f,0x73,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x30,0x2c,0x20,0x69,0x6e,0x2e,0x66,0x73,0x5f,0x75,0x76,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,0x37,0x2e,0x6d,
    0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x20,0x3e,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x66,0x73,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x20,0x3d,0x20,0x69,0x6e,0x2e,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x2d,0x5f,0x31,0x32,0x37,0x2e,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x6c,0x69,0x67,0x68,
    0x74,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x36,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x5f,0x31,0x32,0x37,0x2e,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x61,
    0x6d,0x62,0x69,0x65,0x6e,0x74,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x38,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,
    0x65,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,
    0x5f,0x31,0x32,0x37,0x2e,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2e,0x78,0x79,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,
    0x2e,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x31,0x20,0x3d,0x20,0x70,0x68,0x6f,0x6e,0x67,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x37,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x39,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x3d,0x20,0x67,0x61,0x6d,0x6d,0x61,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x77,0x20,0x2a,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x39,0x37,0x20,
    0x3d,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x5f,0x32,0x30,0x32,0x20,0x3d,0x20,0x5f,0x31,0x39,0x37,0x2e,0x78,0x79,0x7a,
    0x20,0x2a,0x20,0x5f,0x31,0x32,0x37,0x2e,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,
    0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x20,0x3d,0x20,
    0x5f,0x32,0x30,0x32,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x79,
    0x20,0x3d,0x20,0x5f,0x32,0x30,0x32,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x7a,0x20,0x3d,0x20,0x5f,0x32,0x30,0x32,0x2e,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,0x37,
    0x2e,0x75,0x6e,0x5f,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,0x65,0x73,0x74,0x20,0x3e,
    0x3d,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x2e,0x77,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x5f,0x66,0x72,0x61,0x67,0x6d,0x65,
    0x6e,0x74,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
#endif /* SOKOL_METAL */
#if defined(SOKOL_METAL)
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct normal_texture_vs_params
    {
        float4x4 un_mvp;
        float4x4 model;
        float4x4 tex0_mat;
    };
    
    struct main0_out
    {
        float3 fs_normal [[user(locn0)]];
        float2 fs_uv0 [[user(locn1)]];
        float3 fs_position [[user(locn2)]];
        float4 gl_Position [[position]];
    };
    
    struct main0_in
    {
        float3 vs_position [[attribute(0)]];
        float3 vs_normal [[attribute(1)]];
        float2 vs_texcoord0 [[attribute(2)]];
    };
    
    vertex main0_out main0(main0_in in [[stage_in]], constant normal_texture_vs_params& _19 [[buffer(0)]])
    {
        main0_out out = {};
        out.gl_Position = _19.un_mvp * float4(in.vs_position, 1.0);
        out.fs_normal = (_19.model * float4(in.vs_normal, 0.0)).xyz;
        out.fs_uv0 = (_19.tex0_mat * float4(in.vs_texcoord0, 1.0, 1.0)).xy;
        out.fs_position = (_19.model * float4(in.vs_position, 0.0)).xyz;
        return out;
    }
    
*/
static const char normal_vs_source_metal_ios[910] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x75,0x6e,0x5f,0x6d,0x76,0x70,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6d,0x6f,0x64,0x65,
    0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,
    0x74,0x65,0x78,0x30,0x5f,0x6d,0x61,0x74,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,
    0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,
    0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x76,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,
    0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x30,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,
    0x28,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x65,0x72,0x74,0x65,
    0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,
    0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x61,0x6e,0x74,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,
    0x31,0x39,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,
    0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x5f,0x31,0x39,0x2e,0x75,0x6e,0x5f,0x6d,0x76,0x70,0x20,0x2a,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,
    0x28,0x5f,0x31,0x39,0x2e,0x6d,0x6f,0x64,0x65,0x6c,0x20,0x2a,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x76,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6f,0x75,0x74,0x2e,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x3d,0x20,0x28,0x5f,
    0x31,0x39,0x2e,0x74,0x65,0x78,0x30,0x5f,0x6d,0x61,0x74,0x20,0x2a,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x30,0x2c,0x20,0x31,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,
    0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x73,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x5f,0x31,0x39,0x2e,
    0x6d,0x6f,0x64,0x65,0x6c,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,
    0x6e,0x2e,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"
    
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct normal_texture_fs_params
    {
        float4 diffuse;
        float4 ambient;
        float4 specular;
        float4 emissive;
        float3 light_dir;
        float3 light_diffuse;
        float3 light_ambient;
        packed_float3 light_specular;
        float spec_power;
        float un_alpha_test;
        int material;
    };
    
    struct main0_out
    {
        float4 frag_color [[color(0)]];
    };
    
    struct main0_in
    {
        float3 fs_normal [[user(locn0)]];
        float2 fs_uv0 [[user(locn1)]];
        float3 fs_position [[user(locn2)]];
    };
    
    static inline __attribute__((always_inline))
    float4 phong(thread const float3& pos, thread const float3& nrm, thread const float3& l, thread const float3& eye, thread const float3& l_ambient, thread const float3& l_diffuse, thread const float3& l_specular, thread const float3& ambient, thread const float3& diffuse, thread const float3& specular, thread const float& spec_power)
    {
        float3 _47 = fast::normalize(nrm);
        float _58 = fast::max(dot(_47, l), 0.0);
        return float4(fma(l_ambient, ambient, (l_diffuse * diffuse) * _58) + ((l_specular * specular) * (pow(fast::max(dot(reflect(-l, _47), fast::normalize(eye - pos)), 0.0), spec_power) * _58)), 1.0);
    }
    
    static inline __attribute__((always_inline))
    float4 gamma(thread const float4& c)
    {
        return float4(pow(c.xyz, float3(0.4545454680919647216796875)), c.w);
    }
    
    fragment main0_out main0(main0_in in [[stage_in]], constant normal_texture_fs_params& _127 [[buffer(0)]], texture2d<float> un_tex0 [[texture(0)]], sampler un_sampler0 [[sampler(0)]])
    {
        main0_out out = {};
        out.frag_color = un_tex0.sample(un_sampler0, in.fs_uv0);
        if (_127.material > 0)
        {
            float3 param = in.fs_position;
            float3 param_1 = in.fs_normal;
            float3 param_2 = -_127.light_dir;
            float3 param_3 = float3(0.0);
            float3 param_4 = _127.light_ambient;
            float3 param_5 = _127.light_diffuse;
            float3 param_6 = float3(_127.light_specular);
            float3 param_7 = _127.ambient.xyz;
            float3 param_8 = _127.diffuse.xyz;
            float3 param_9 = _127.specular.xyz;
            float param_10 = _127.spec_power;
            float4 param_11 = phong(param, param_1, param_2, param_3, param_4, param_5, param_6, param_7, param_8, param_9, param_10);
            out.frag_color *= gamma(param_11);
            out.frag_color.w *= _127.diffuse.w;
        }
        else
        {
            float4 _197 = out.frag_color;
            float3 _202 = _197.xyz * _127.ambient.xyz;
            out.frag_color.x = _202.x;
            out.frag_color.y = _202.y;
            out.frag_color.z = _202.z;
        }
        if (_127.un_alpha_test >= out.frag_color.w)
        {
            discard_fragment();
        }
        return out;
    }
    
*/
static const char normal_fs_source_metal_ios[2768] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x65,0x6d,0x69,0x73,0x73,
    0x69,0x76,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x70,0x61,0x63,0x6b,0x65,0x64,0x5f,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x70,0x65,0x63,0x5f,
    0x70,0x6f,0x77,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x75,0x6e,0x5f,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,0x65,0x73,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,
    0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x73,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,
    0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x5b,0x5b,0x75,0x73,0x65,
    0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,
    0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,
    0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,
    0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,
    0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x68,0x6f,0x6e,
    0x67,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x70,0x6f,0x73,0x2c,0x20,0x74,0x68,0x72,0x65,
    0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,
    0x20,0x6e,0x72,0x6d,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,
    0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x2c,0x20,0x74,0x68,
    0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x26,0x20,0x65,0x79,0x65,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x5f,0x61,
    0x6d,0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x5f,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x5f,0x73,
    0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,
    0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x61,0x6d,
    0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,
    0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,
    0x61,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x26,0x20,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,
    0x65,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x5f,0x34,0x37,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6e,0x72,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x38,0x20,0x3d,0x20,0x66,0x61,0x73,
    0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x5f,0x34,0x37,0x2c,0x20,
    0x6c,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,0x6d,0x61,0x28,
    0x6c,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x61,0x6d,0x62,0x69,0x65,
    0x6e,0x74,0x2c,0x20,0x28,0x6c,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x2a,
    0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x29,0x20,0x2a,0x20,0x5f,0x35,0x38,0x29,
    0x20,0x2b,0x20,0x28,0x28,0x6c,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x20,
    0x2a,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x29,0x20,0x2a,0x20,0x28,0x70,
    0x6f,0x77,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,
    0x28,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,0x2d,0x6c,0x2c,0x20,0x5f,0x34,0x37,
    0x29,0x2c,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x65,0x79,0x65,0x20,0x2d,0x20,0x70,0x6f,0x73,0x29,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x2c,0x20,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,
    0x29,0x20,0x2a,0x20,0x5f,0x35,0x38,0x29,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,
    0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,
    0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,
    0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x61,0x6d,0x6d,0x61,0x28,0x74,0x68,
    0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x26,0x20,0x63,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x70,0x6f,0x77,0x28,0x63,0x2e,
    0x78,0x79,0x7a,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x34,0x35,
    0x34,0x35,0x34,0x35,0x34,0x36,0x38,0x30,0x39,0x31,0x39,0x36,0x34,0x37,0x32,0x31,
    0x36,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x29,0x2c,0x20,0x63,0x2e,0x77,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x32,0x37,0x20,0x5b,
    0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x75,
    0x6e,0x5f,0x74,0x65,0x78,0x30,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x75,
    0x6e,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x30,0x20,0x5b,0x5b,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,
    0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x75,0x6e,0x5f,0x74,0x65,0x78,
    0x30,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,0x28,0x75,0x6e,0x5f,0x73,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x30,0x2c,0x20,0x69,0x6e,0x2e,0x66,0x73,0x5f,0x75,0x76,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,0x37,0x2e,0x6d,
    0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x20,0x3e,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x66,0x73,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x20,0x3d,0x20,0x69,0x6e,0x2e,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x2d,0x5f,0x31,0x32,0x37,0x2e,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x6c,0x69,0x67,0x68,
    0x74,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x36,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x5f,0x31,0x32,0x37,0x2e,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x61,
    0x6d,0x62,0x69,0x65,0x6e,0x74,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x38,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,
    0x65,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,
    0x5f,0x31,0x32,0x37,0x2e,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2e,0x78,0x79,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,
    0x2e,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x31,0x20,0x3d,0x20,0x70,0x68,0x6f,0x6e,0x67,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x37,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x39,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x3d,0x20,0x67,0x61,0x6d,0x6d,0x61,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x77,0x20,0x2a,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x39,0x37,0x20,
    0x3d,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x5f,0x32,0x30,0x32,0x20,0x3d,0x20,0x5f,0x31,0x39,0x37,0x2e,0x78,0x79,0x7a,
    0x20,0x2a,0x20,0x5f,0x31,0x32,0x37,0x2e,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,
    0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x20,0x3d,0x20,
    0x5f,0x32,0x30,0x32,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x79,
    0x20,0x3d,0x20,0x5f,0x32,0x30,0x32,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x7a,0x20,0x3d,0x20,0x5f,0x32,0x30,0x32,0x2e,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,0x37,
    0x2e,0x75,0x6e,0x5f,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,0x65,0x73,0x74,0x20,0x3e,
    0x3d,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x2e,0x77,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x5f,0x66,0x72,0x61,0x67,0x6d,0x65,
    0x6e,0x74,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
#endif /* SOKOL_METAL */
#if defined(SOKOL_METAL)
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct normal_texture_vs_params
    {
        float4x4 un_mvp;
        float4x4 model;
        float4x4 tex0_mat;
    };
    
    struct main0_out
    {
        float3 fs_normal [[user(locn0)]];
        float2 fs_uv0 [[user(locn1)]];
        float3 fs_position [[user(locn2)]];
        float4 gl_Position [[position]];
    };
    
    struct main0_in
    {
        float3 vs_position [[attribute(0)]];
        float3 vs_normal [[attribute(1)]];
        float2 vs_texcoord0 [[attribute(2)]];
    };
    
    vertex main0_out main0(main0_in in [[stage_in]], constant normal_texture_vs_params& _19 [[buffer(0)]])
    {
        main0_out out = {};
        out.gl_Position = _19.un_mvp * float4(in.vs_position, 1.0);
        out.fs_normal = (_19.model * float4(in.vs_normal, 0.0)).xyz;
        out.fs_uv0 = (_19.tex0_mat * float4(in.vs_texcoord0, 1.0, 1.0)).xy;
        out.fs_position = (_19.model * float4(in.vs_position, 0.0)).xyz;
        return out;
    }
    
*/
static const char normal_vs_source_metal_sim[910] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x75,0x6e,0x5f,0x6d,0x76,0x70,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6d,0x6f,0x64,0x65,
    0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,
    0x74,0x65,0x78,0x30,0x5f,0x6d,0x61,0x74,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,
    0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,
    0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x76,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,
    0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x30,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,
    0x28,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x65,0x72,0x74,0x65,
    0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,
    0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x61,0x6e,0x74,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,
    0x31,0x39,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,
    0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x5f,0x31,0x39,0x2e,0x75,0x6e,0x5f,0x6d,0x76,0x70,0x20,0x2a,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,
    0x28,0x5f,0x31,0x39,0x2e,0x6d,0x6f,0x64,0x65,0x6c,0x20,0x2a,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x76,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6f,0x75,0x74,0x2e,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x3d,0x20,0x28,0x5f,
    0x31,0x39,0x2e,0x74,0x65,0x78,0x30,0x5f,0x6d,0x61,0x74,0x20,0x2a,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x30,0x2c,0x20,0x31,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,
    0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x73,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x5f,0x31,0x39,0x2e,
    0x6d,0x6f,0x64,0x65,0x6c,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,
    0x6e,0x2e,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"
    
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct normal_texture_fs_params
    {
        float4 diffuse;
        float4 ambient;
        float4 specular;
        float4 emissive;
        float3 light_dir;
        float3 light_diffuse;
        float3 light_ambient;
        packed_float3 light_specular;
        float spec_power;
        float un_alpha_test;
        int material;
    };
    
    struct main0_out
    {
        float4 frag_color [[color(0)]];
    };
    
    struct main0_in
    {
        float3 fs_normal [[user(locn0)]];
        float2 fs_uv0 [[user(locn1)]];
        float3 fs_position [[user(locn2)]];
    };
    
    static inline __attribute__((always_inline))
    float4 phong(thread const float3& pos, thread const float3& nrm, thread const float3& l, thread const float3& eye, thread const float3& l_ambient, thread const float3& l_diffuse, thread const float3& l_specular, thread const float3& ambient, thread const float3& diffuse, thread const float3& specular, thread const float& spec_power)
    {
        float3 _47 = fast::normalize(nrm);
        float _58 = fast::max(dot(_47, l), 0.0);
        return float4(fma(l_ambient, ambient, (l_diffuse * diffuse) * _58) + ((l_specular * specular) * (pow(fast::max(dot(reflect(-l, _47), fast::normalize(eye - pos)), 0.0), spec_power) * _58)), 1.0);
    }
    
    static inline __attribute__((always_inline))
    float4 gamma(thread const float4& c)
    {
        return float4(pow(c.xyz, float3(0.4545454680919647216796875)), c.w);
    }
    
    fragment main0_out main0(main0_in in [[stage_in]], constant normal_texture_fs_params& _127 [[buffer(0)]], texture2d<float> un_tex0 [[texture(0)]], sampler un_sampler0 [[sampler(0)]])
    {
        main0_out out = {};
        out.frag_color = un_tex0.sample(un_sampler0, in.fs_uv0);
        if (_127.material > 0)
        {
            float3 param = in.fs_position;
            float3 param_1 = in.fs_normal;
            float3 param_2 = -_127.light_dir;
            float3 param_3 = float3(0.0);
            float3 param_4 = _127.light_ambient;
            float3 param_5 = _127.light_diffuse;
            float3 param_6 = float3(_127.light_specular);
            float3 param_7 = _127.ambient.xyz;
            float3 param_8 = _127.diffuse.xyz;
            float3 param_9 = _127.specular.xyz;
            float param_10 = _127.spec_power;
            float4 param_11 = phong(param, param_1, param_2, param_3, param_4, param_5, param_6, param_7, param_8, param_9, param_10);
            out.frag_color *= gamma(param_11);
            out.frag_color.w *= _127.diffuse.w;
        }
        else
        {
            float4 _197 = out.frag_color;
            float3 _202 = _197.xyz * _127.ambient.xyz;
            out.frag_color.x = _202.x;
            out.frag_color.y = _202.y;
            out.frag_color.z = _202.z;
        }
        if (_127.un_alpha_test >= out.frag_color.w)
        {
            discard_fragment();
        }
        return out;
    }
    
*/
static const char normal_fs_source_metal_sim[2768] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x65,0x6d,0x69,0x73,0x73,
    0x69,0x76,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x70,0x61,0x63,0x6b,0x65,0x64,0x5f,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x70,0x65,0x63,0x5f,
    0x70,0x6f,0x77,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x75,0x6e,0x5f,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,0x65,0x73,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,
    0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x73,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,
    0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x5b,0x5b,0x75,0x73,0x65,
    0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,
    0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,
    0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,
    0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,
    0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x68,0x6f,0x6e,
    0x67,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x70,0x6f,0x73,0x2c,0x20,0x74,0x68,0x72,0x65,
    0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,
    0x20,0x6e,0x72,0x6d,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,
    0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x2c,0x20,0x74,0x68,
    0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x26,0x20,0x65,0x79,0x65,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x5f,0x61,
    0x6d,0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x5f,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x5f,0x73,
    0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,
    0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x61,0x6d,
    0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,
    0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,
    0x61,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x26,0x20,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,
    0x65,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x5f,0x34,0x37,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6e,0x72,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x38,0x20,0x3d,0x20,0x66,0x61,0x73,
    0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x5f,0x34,0x37,0x2c,0x20,
    0x6c,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,0x6d,0x61,0x28,
    0x6c,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x61,0x6d,0x62,0x69,0x65,
    0x6e,0x74,0x2c,0x20,0x28,0x6c,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x2a,
    0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x29,0x20,0x2a,0x20,0x5f,0x35,0x38,0x29,
    0x20,0x2b,0x20,0x28,0x28,0x6c,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x20,
    0x2a,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x29,0x20,0x2a,0x20,0x28,0x70,
    0x6f,0x77,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,
    0x28,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,0x2d,0x6c,0x2c,0x20,0x5f,0x34,0x37,
    0x29,0x2c,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x65,0x79,0x65,0x20,0x2d,0x20,0x70,0x6f,0x73,0x29,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x2c,0x20,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,
    0x29,0x20,0x2a,0x20,0x5f,0x35,0x38,0x29,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,
    0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,
    0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,
    0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x61,0x6d,0x6d,0x61,0x28,0x74,0x68,
    0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x26,0x20,0x63,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x70,0x6f,0x77,0x28,0x63,0x2e,
    0x78,0x79,0x7a,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x34,0x35,
    0x34,0x35,0x34,0x35,0x34,0x36,0x38,0x30,0x39,0x31,0x39,0x36,0x34,0x37,0x32,0x31,
    0x36,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x29,0x2c,0x20,0x63,0x2e,0x77,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x32,0x37,0x20,0x5b,
    0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x75,
    0x6e,0x5f,0x74,0x65,0x78,0x30,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x75,
    0x6e,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x30,0x20,0x5b,0x5b,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,
    0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x75,0x6e,0x5f,0x74,0x65,0x78,
    0x30,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,0x28,0x75,0x6e,0x5f,0x73,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x30,0x2c,0x20,0x69,0x6e,0x2e,0x66,0x73,0x5f,0x75,0x76,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,0x37,0x2e,0x6d,
    0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x20,0x3e,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x66,0x73,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x20,0x3d,0x20,0x69,0x6e,0x2e,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x2d,0x5f,0x31,0x32,0x37,0x2e,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x6c,0x69,0x67,0x68,
    0x74,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x36,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x5f,0x31,0x32,0x37,0x2e,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x61,
    0x6d,0x62,0x69,0x65,0x6e,0x74,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x38,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,
    0x65,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,
    0x5f,0x31,0x32,0x37,0x2e,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2e,0x78,0x79,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x5f,0x31,0x32,0x37,
    0x2e,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x31,0x20,0x3d,0x20,0x70,0x68,0x6f,0x6e,0x67,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x37,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x39,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x3d,0x20,0x67,0x61,0x6d,0x6d,0x61,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x77,0x20,0x2a,0x3d,0x20,0x5f,0x31,0x32,0x37,0x2e,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x39,0x37,0x20,
    0x3d,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x5f,0x32,0x30,0x32,0x20,0x3d,0x20,0x5f,0x31,0x39,0x37,0x2e,0x78,0x79,0x7a,
    0x20,0x2a,0x20,0x5f,0x31,0x32,0x37,0x2e,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,
    0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x20,0x3d,0x20,
    0x5f,0x32,0x30,0x32,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x79,
    0x20,0x3d,0x20,0x5f,0x32,0x30,0x32,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x7a,0x20,0x3d,0x20,0x5f,0x32,0x30,0x32,0x2e,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x32,0x37,
    0x2e,0x75,0x6e,0x5f,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,0x65,0x73,0x74,0x20,0x3e,
    0x3d,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x2e,0x77,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x5f,0x66,0x72,0x61,0x67,0x6d,0x65,
    0x6e,0x74,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
#endif /* SOKOL_METAL */
#if defined(SOKOL_WGPU)
/*
    diagnostic(off, derivative_uniformity);
    
    struct normal_texture_vs_params {
      /_ @offset(0) _/
      un_mvp : mat4x4f,
      /_ @offset(64) _/
      model : mat4x4f,
      /_ @offset(128) _/
      tex0_mat : mat4x4f,
    }
    
    @group(0) @binding(0) var<uniform> x_19 : normal_texture_vs_params;
    
    var<private> vs_position : vec3f;
    
    var<private> fs_normal : vec3f;
    
    var<private> vs_normal : vec3f;
    
    var<private> fs_uv0 : vec2f;
    
    var<private> vs_texcoord0 : vec2f;
    
    var<private> fs_position : vec3f;
    
    var<private> gl_Position : vec4f;
    
    fn main_1() {
      let x_22 : mat4x4f = x_19.un_mvp;
      let x_26 : vec3f = vs_position;
      gl_Position = (x_22 * vec4f(x_26.x, x_26.y, x_26.z, 1.0f));
      let x_39 : mat4x4f = x_19.model;
      let x_41 : vec3f = vs_normal;
      let x_47 : vec4f = (x_39 * vec4f(x_41.x, x_41.y, x_41.z, 0.0f));
      fs_normal = vec3f(x_47.x, x_47.y, x_47.z);
      let x_54 : mat4x4f = x_19.tex0_mat;
      let x_57 : vec2f = vs_texcoord0;
      let x_61 : vec4f = (x_54 * vec4f(x_57.x, x_57.y, 1.0f, 1.0f));
      fs_uv0 = vec2f(x_61.x, x_61.y);
      let x_65 : mat4x4f = x_19.model;
      let x_66 : vec3f = vs_position;
      let x_71 : vec4f = (x_65 * vec4f(x_66.x, x_66.y, x_66.z, 0.0f));
      fs_position = vec3f(x_71.x, x_71.y, x_71.z);
      return;
    }
    
    struct main_out {
      @builtin(position)
      gl_Position : vec4f,
      @location(0)
      fs_normal_1 : vec3f,
      @location(1)
      fs_uv0_1 : vec2f,
      @location(2)
      fs_position_1 : vec3f,
    }
    
    @vertex
    fn main(@location(0) vs_position_param : vec3f, @location(1) vs_normal_param : vec3f, @location(2) vs_texcoord0_param : vec2f) -> main_out {
      vs_position = vs_position_param;
      vs_normal = vs_normal_param;
      vs_texcoord0 = vs_texcoord0_param;
      main_1();
      return main_out(gl_Position, fs_normal, fs_uv0, fs_position);
    }
    
*/
static const char normal_vs_source_wgsl[1708] = {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,0x20,
    0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,
    0x75,0x6e,0x5f,0x6d,0x76,0x70,0x20,0x3a,0x20,0x6d,0x61,0x74,0x34,0x78,0x34,0x66,
    0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x36,
    0x34,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x6d,0x6f,0x64,0x65,0x6c,0x20,0x3a,0x20,
    0x6d,0x61,0x74,0x34,0x78,0x34,0x66,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x31,0x32,0x38,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,
    0x74,0x65,0x78,0x30,0x5f,0x6d,0x61,0x74,0x20,0x3a,0x20,0x6d,0x61,0x74,0x34,0x78,
    0x34,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x30,0x29,
    0x20,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x30,0x29,0x20,0x76,0x61,0x72,
    0x3c,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x3e,0x20,0x78,0x5f,0x31,0x39,0x20,0x3a,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,
    0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x0a,0x76,
    0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x73,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x0a,
    0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x76,0x73,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,
    0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x73,
    0x5f,0x75,0x76,0x30,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x3b,0x0a,0x0a,0x76,
    0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x76,0x73,0x5f,0x74,
    0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,
    0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,
    0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x33,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,
    0x65,0x3e,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,
    0x5f,0x31,0x28,0x29,0x20,0x7b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,
    0x32,0x20,0x3a,0x20,0x6d,0x61,0x74,0x34,0x78,0x34,0x66,0x20,0x3d,0x20,0x78,0x5f,
    0x31,0x39,0x2e,0x75,0x6e,0x5f,0x6d,0x76,0x70,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x32,0x36,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,
    0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x78,0x5f,
    0x32,0x32,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x66,0x28,0x78,0x5f,0x32,0x36,0x2e,
    0x78,0x2c,0x20,0x78,0x5f,0x32,0x36,0x2e,0x79,0x2c,0x20,0x78,0x5f,0x32,0x36,0x2e,
    0x7a,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x33,0x39,0x20,0x3a,0x20,0x6d,0x61,0x74,0x34,0x78,0x34,0x66,0x20,
    0x3d,0x20,0x78,0x5f,0x31,0x39,0x2e,0x6d,0x6f,0x64,0x65,0x6c,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x34,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,
    0x20,0x3d,0x20,0x76,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x34,0x37,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,
    0x20,0x3d,0x20,0x28,0x78,0x5f,0x33,0x39,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x66,
    0x28,0x78,0x5f,0x34,0x31,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x34,0x31,0x2e,0x79,0x2c,
    0x20,0x78,0x5f,0x34,0x31,0x2e,0x7a,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x33,0x66,0x28,0x78,0x5f,0x34,0x37,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x34,
    0x37,0x2e,0x79,0x2c,0x20,0x78,0x5f,0x34,0x37,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x35,0x34,0x20,0x3a,0x20,0x6d,0x61,0x74,0x34,0x78,
    0x34,0x66,0x20,0x3d,0x20,0x78,0x5f,0x31,0x39,0x2e,0x74,0x65,0x78,0x30,0x5f,0x6d,
    0x61,0x74,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x35,0x37,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x32,0x66,0x20,0x3d,0x20,0x76,0x73,0x5f,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x36,
    0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x28,0x78,0x5f,0x35,
    0x34,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x66,0x28,0x78,0x5f,0x35,0x37,0x2e,0x78,
    0x2c,0x20,0x78,0x5f,0x35,0x37,0x2e,0x79,0x2c,0x20,0x31,0x2e,0x30,0x66,0x2c,0x20,
    0x31,0x2e,0x30,0x66,0x29,0x29,0x3b,0x0a,0x20,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x66,0x28,0x78,0x5f,0x36,0x31,0x2e,0x78,0x2c,
    0x20,0x78,0x5f,0x36,0x31,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,
    0x78,0x5f,0x36,0x35,0x20,0x3a,0x20,0x6d,0x61,0x74,0x34,0x78,0x34,0x66,0x20,0x3d,
    0x20,0x78,0x5f,0x31,0x39,0x2e,0x6d,0x6f,0x64,0x65,0x6c,0x3b,0x0a,0x20,0x20,0x6c,
    0x65,0x74,0x20,0x78,0x5f,0x36,0x36,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,
    0x3d,0x20,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x37,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,
    0x66,0x20,0x3d,0x20,0x28,0x78,0x5f,0x36,0x35,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,
    0x66,0x28,0x78,0x5f,0x36,0x36,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x36,0x36,0x2e,0x79,
    0x2c,0x20,0x78,0x5f,0x36,0x36,0x2e,0x7a,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x78,0x5f,0x37,0x31,0x2e,0x78,0x2c,0x20,
    0x78,0x5f,0x37,0x31,0x2e,0x79,0x2c,0x20,0x78,0x5f,0x37,0x31,0x2e,0x7a,0x29,0x3b,
    0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,
    0x20,0x20,0x40,0x62,0x75,0x69,0x6c,0x74,0x69,0x6e,0x28,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x29,0x0a,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x20,0x20,0x40,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x0a,0x20,0x20,0x66,0x73,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,
    0x2c,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x31,0x29,
    0x0a,0x20,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x32,0x66,0x2c,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x28,0x32,0x29,0x0a,0x20,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,
    0x40,0x76,0x65,0x72,0x74,0x65,0x78,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x20,0x76,0x73,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x28,0x31,0x29,0x20,0x76,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x20,0x40,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x32,0x29,0x20,0x76,0x73,0x5f,0x74,0x65,
    0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,
    0x76,0x65,0x63,0x32,0x66,0x29,0x20,0x2d,0x3e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,
    0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x76,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x76,0x73,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x76,0x73,0x5f,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x30,0x20,0x3d,0x20,0x76,0x73,0x5f,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x30,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x6d,0x61,
    0x69,0x6e,0x5f,0x31,0x28,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x28,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2c,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x2c,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    diagnostic(off, derivative_uniformity);
    
    struct normal_texture_fs_params {
      /_ @offset(0) _/
      diffuse : vec4f,
      /_ @offset(16) _/
      ambient : vec4f,
      /_ @offset(32) _/
      specular : vec4f,
      /_ @offset(48) _/
      emissive : vec4f,
      /_ @offset(64) _/
      light_dir : vec3f,
      /_ @offset(80) _/
      light_diffuse : vec3f,
      /_ @offset(96) _/
      light_ambient : vec3f,
      /_ @offset(112) _/
      light_specular : vec3f,
      /_ @offset(124) _/
      spec_power : f32,
      /_ @offset(128) _/
      un_alpha_test : f32,
      /_ @offset(132) _/
      material : i32,
    }
    
    var<private> frag_color : vec4f;
    
    @group(1) @binding(32) var un_tex0 : texture_2d<f32>;
    
    @group(1) @binding(48) var un_sampler0 : sampler;
    
    var<private> fs_uv0 : vec2f;
    
    @group(0) @binding(4) var<uniform> x_127 : normal_texture_fs_params;
    
    var<private> fs_position : vec3f;
    
    var<private> fs_normal : vec3f;
    
    const x_82 = vec3f(1.0f, 1.0f, 1.0f);
    
    fn phong_vf3_vf3_vf3_vf3_vf3_vf3_vf3_vf3_vf3_vf3_f1_(pos : ptr<function, vec3f>, nrm : ptr<function, vec3f>, l : ptr<function, vec3f>, eye : ptr<function, vec3f>, l_ambient : ptr<function, vec3f>, l_diffuse : ptr<function, vec3f>, l_specular : ptr<function, vec3f>, ambient : ptr<function, vec3f>, diffuse : ptr<function, vec3f>, specular : ptr<function, vec3f>, spec_power : ptr<function, f32>) -> vec4f {
      var n : vec3f;
      var v : vec3f;
      var n_dot_l : f32;
      var r : vec3f;
      var r_dot_v : f32;
      var diff : f32;
      var spec : f32;
      var ambient_v : vec3f;
      var diffuse_v : vec3f;
      var specular_v : vec3f;
      let x_46 : vec3f = *(nrm);
      n = normalize(x_46);
      let x_49 : vec3f = *(eye);
      let x_50 : vec3f = *(pos);
      v = normalize((x_49 - x_50));
      let x_54 : vec3f = n;
      let x_55 : vec3f = *(l);
      n_dot_l = max(dot(x_54, x_55), 0.0f);
      let x_60 : vec3f = *(l);
      let x_61 : vec3f = -(x_60);
      let x_62 : vec3f = n;
      r = reflect(x_61, x_62);
      let x_65 : vec3f = r;
      let x_66 : vec3f = v;
      r_dot_v = max(dot(x_65, x_66), 0.0f);
      let x_70 : f32 = n_dot_l;
      diff = x_70;
      let x_72 : f32 = r_dot_v;
      let x_73 : f32 = *(spec_power);
      let x_75 : f32 = n_dot_l;
      spec = (pow(x_72, x_73) * x_75);
      let x_78 : vec3f = *(l_ambient);
      let x_79 : vec3f = *(ambient);
      ambient_v = ((x_78 * x_79) * x_82);
      let x_85 : vec3f = *(l_diffuse);
      let x_86 : vec3f = *(diffuse);
      let x_88 : f32 = diff;
      diffuse_v = ((x_85 * x_86) * x_88);
      let x_91 : vec3f = *(l_specular);
      let x_92 : vec3f = *(specular);
      let x_94 : f32 = spec;
      specular_v = ((x_91 * x_92) * x_94);
      let x_96 : vec3f = ambient_v;
      let x_97 : vec3f = diffuse_v;
      let x_99 : vec3f = specular_v;
      let x_100 : vec3f = ((x_96 + x_97) + x_99);
      return vec4f(x_100.x, x_100.y, x_100.z, 1.0f);
    }
    
    fn gamma_vf4_(c : ptr<function, vec4f>) -> vec4f {
      let x_30 : vec4f = *(c);
      let x_34 : vec3f = pow(vec3f(x_30.x, x_30.y, x_30.z), vec3f(0.45454546809196472168f, 0.45454546809196472168f, 0.45454546809196472168f));
      let x_38 : f32 = (*(c)).w;
      return vec4f(x_34.x, x_34.y, x_34.z, x_38);
    }
    
    fn main_1() {
      var param : vec3f;
      var param_1 : vec3f;
      var param_2 : vec3f;
      var param_3 : vec3f;
      var param_4 : vec3f;
      var param_5 : vec3f;
      var param_6 : vec3f;
      var param_7 : vec3f;
      var param_8 : vec3f;
      var param_9 : vec3f;
      var param_10 : f32;
      var param_11 : vec4f;
      let x_122 : vec2f = fs_uv0;
      let x_123 : vec4f = textureSample(un_tex0, un_sampler0, x_122);
      frag_color = x_123;
      let x_131 : i32 = x_127.material;
      if ((x_131 > 0i)) {
        let x_137 : vec4f = frag_color;
        let x_144 : vec3f = x_127.light_dir;
        let x_154 : vec3f = fs_position;
        param = x_154;
        let x_156 : vec3f = fs_normal;
        param_1 = x_156;
        param_2 = -(x_144);
        param_3 = vec3f(0.0f, 0.0f, 0.0f);
        let x_161 : vec3f = x_127.light_ambient;
        param_4 = x_161;
        let x_164 : vec3f = x_127.light_diffuse;
        param_5 = x_164;
        let x_167 : vec3f = x_127.light_specular;
        param_6 = x_167;
        let x_171 : vec4f = x_127.ambient;
        param_7 = vec3f(x_171.x, x_171.y, x_171.z);
        let x_175 : vec4f = x_127.diffuse;
        param_8 = vec3f(x_175.x, x_175.y, x_175.z);
        let x_179 : vec4f = x_127.specular;
        param_9 = vec3f(x_179.x, x_179.y, x_179.z);
        let x_184 : f32 = x_127.spec_power;
        param_10 = x_184;
        let x_185 : vec4f = phong_vf3_vf3_vf3_vf3_vf3_vf3_vf3_vf3_vf3_vf3_f1_(&(param), &(param_1), &(param_2), &(param_3), &(param_4), &(param_5), &(param_6), &(param_7), &(param_8), &(param_9), &(param_10));
        param_11 = x_185;
        let x_187 : vec4f = gamma_vf4_(&(param_11));
        frag_color = (x_137 * x_187);
        let x_190 : f32 = x_127.diffuse.w;
        let x_193 : f32 = frag_color.w;
        frag_color.w = (x_193 * x_190);
      } else {
        let x_197 : vec4f = frag_color;
        let x_200 : vec4f = x_127.ambient;
        let x_203 : vec3f = ((vec3f(x_197.x, x_197.y, x_197.z) * vec3f(x_200.x, x_200.y, x_200.z)) * x_82);
        frag_color.x = x_203.x;
        frag_color.y = x_203.y;
        frag_color.z = x_203.z;
      }
      let x_215 : f32 = x_127.un_alpha_test;
      let x_217 : f32 = frag_color.w;
      if ((x_215 >= x_217)) {
        discard;
      }
      return;
    }
    
    struct main_out {
      @location(0)
      frag_color_1 : vec4f,
    }
    
    @fragment
    fn main(@location(1) fs_uv0_param : vec2f, @location(2) fs_position_param : vec3f, @location(0) fs_normal_param : vec3f) -> main_out {
      fs_uv0 = fs_uv0_param;
      fs_position = fs_position_param;
      fs_normal = fs_normal_param;
      main_1();
      return main_out(frag_color);
    }
    
*/
static const char normal_fs_source_wgsl[5367] = {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,0x20,
    0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,
    0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,
    0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x31,0x36,
    0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,
    0x66,0x73,0x65,0x74,0x28,0x33,0x32,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x73,0x70,
    0x65,0x63,0x75,0x6c,0x61,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,
    0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x34,0x38,0x29,
    0x20,0x2a,0x2f,0x0a,0x20,0x20,0x65,0x6d,0x69,0x73,0x73,0x69,0x76,0x65,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,
    0x66,0x73,0x65,0x74,0x28,0x36,0x34,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,
    0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x38,0x30,
    0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x0a,0x20,0x20,
    0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x39,0x36,0x29,0x20,0x2a,
    0x2f,0x0a,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,
    0x74,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,
    0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x31,0x31,0x32,0x29,0x20,0x2a,0x2f,0x0a,
    0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x31,0x32,0x34,0x29,0x20,0x2a,0x2f,0x0a,0x20,
    0x20,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x20,0x3a,0x20,0x66,0x33,
    0x32,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,
    0x31,0x32,0x38,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x75,0x6e,0x5f,0x61,0x6c,0x70,
    0x68,0x61,0x5f,0x74,0x65,0x73,0x74,0x20,0x3a,0x20,0x66,0x33,0x32,0x2c,0x0a,0x20,
    0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x31,0x33,0x32,0x29,
    0x20,0x2a,0x2f,0x0a,0x20,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x20,0x3a,
    0x20,0x69,0x33,0x32,0x2c,0x0a,0x7d,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,
    0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x40,0x67,0x72,0x6f,0x75,
    0x70,0x28,0x31,0x29,0x20,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x33,0x32,
    0x29,0x20,0x76,0x61,0x72,0x20,0x75,0x6e,0x5f,0x74,0x65,0x78,0x30,0x20,0x3a,0x20,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x32,0x64,0x3c,0x66,0x33,0x32,0x3e,0x3b,
    0x0a,0x0a,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x31,0x29,0x20,0x40,0x62,0x69,0x6e,
    0x64,0x69,0x6e,0x67,0x28,0x34,0x38,0x29,0x20,0x76,0x61,0x72,0x20,0x75,0x6e,0x5f,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x30,0x20,0x3a,0x20,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,
    0x3e,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,
    0x3b,0x0a,0x0a,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x30,0x29,0x20,0x40,0x62,0x69,
    0x6e,0x64,0x69,0x6e,0x67,0x28,0x34,0x29,0x20,0x76,0x61,0x72,0x3c,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x3e,0x20,0x78,0x5f,0x31,0x32,0x37,0x20,0x3a,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,
    0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,
    0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x0a,0x63,0x6f,0x6e,
    0x73,0x74,0x20,0x78,0x5f,0x38,0x32,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x66,0x28,
    0x31,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,
    0x29,0x3b,0x0a,0x0a,0x66,0x6e,0x20,0x70,0x68,0x6f,0x6e,0x67,0x5f,0x76,0x66,0x33,
    0x5f,0x76,0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x76,0x66,0x33,
    0x5f,0x76,0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x76,0x66,0x33,
    0x5f,0x76,0x66,0x33,0x5f,0x66,0x31,0x5f,0x28,0x70,0x6f,0x73,0x20,0x3a,0x20,0x70,
    0x74,0x72,0x3c,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x66,0x3e,0x2c,0x20,0x6e,0x72,0x6d,0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,0x66,
    0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x3e,0x2c,
    0x20,0x6c,0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,
    0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x3e,0x2c,0x20,0x65,0x79,0x65,0x20,0x3a,
    0x20,0x70,0x74,0x72,0x3c,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,
    0x65,0x63,0x33,0x66,0x3e,0x2c,0x20,0x6c,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,
    0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x2c,
    0x20,0x76,0x65,0x63,0x33,0x66,0x3e,0x2c,0x20,0x6c,0x5f,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,
    0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x3e,0x2c,0x20,0x6c,0x5f,0x73,0x70,0x65,
    0x63,0x75,0x6c,0x61,0x72,0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,0x66,0x75,0x6e,0x63,
    0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x3e,0x2c,0x20,0x61,0x6d,
    0x62,0x69,0x65,0x6e,0x74,0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,0x66,0x75,0x6e,0x63,
    0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x3e,0x2c,0x20,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,0x66,0x75,0x6e,0x63,
    0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x3e,0x2c,0x20,0x73,0x70,
    0x65,0x63,0x75,0x6c,0x61,0x72,0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,0x66,0x75,0x6e,
    0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x3e,0x2c,0x20,0x73,
    0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,
    0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x66,0x33,0x32,0x3e,0x29,0x20,
    0x2d,0x3e,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x7b,0x0a,0x20,0x20,0x76,0x61,0x72,
    0x20,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,
    0x72,0x20,0x76,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,
    0x61,0x72,0x20,0x6e,0x5f,0x64,0x6f,0x74,0x5f,0x6c,0x20,0x3a,0x20,0x66,0x33,0x32,
    0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,
    0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x72,0x5f,0x64,0x6f,0x74,0x5f,0x76,
    0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x64,0x69,
    0x66,0x66,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,
    0x73,0x70,0x65,0x63,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,
    0x72,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x5f,0x76,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x5f,0x76,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,
    0x76,0x61,0x72,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,0x76,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x34,0x36,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x2a,0x28,0x6e,
    0x72,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x6e,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x69,0x7a,0x65,0x28,0x78,0x5f,0x34,0x36,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x34,0x39,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,
    0x20,0x2a,0x28,0x65,0x79,0x65,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x35,0x30,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x2a,0x28,
    0x70,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,0x76,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x28,0x78,0x5f,0x34,0x39,0x20,0x2d,0x20,0x78,0x5f,
    0x35,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x35,0x34,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x6e,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x35,0x35,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,
    0x20,0x3d,0x20,0x2a,0x28,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x6e,0x5f,0x64,0x6f,0x74,
    0x5f,0x6c,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x78,0x5f,0x35,
    0x34,0x2c,0x20,0x78,0x5f,0x35,0x35,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x36,0x30,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x33,0x66,0x20,0x3d,0x20,0x2a,0x28,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x36,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,
    0x20,0x2d,0x28,0x78,0x5f,0x36,0x30,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,
    0x78,0x5f,0x36,0x32,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x6e,
    0x3b,0x0a,0x20,0x20,0x72,0x20,0x3d,0x20,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,
    0x78,0x5f,0x36,0x31,0x2c,0x20,0x78,0x5f,0x36,0x32,0x29,0x3b,0x0a,0x20,0x20,0x6c,
    0x65,0x74,0x20,0x78,0x5f,0x36,0x35,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,
    0x3d,0x20,0x72,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x36,0x36,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x76,0x3b,0x0a,0x20,0x20,0x72,
    0x5f,0x64,0x6f,0x74,0x5f,0x76,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,
    0x28,0x78,0x5f,0x36,0x35,0x2c,0x20,0x78,0x5f,0x36,0x36,0x29,0x2c,0x20,0x30,0x2e,
    0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x37,0x30,0x20,
    0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x6e,0x5f,0x64,0x6f,0x74,0x5f,0x6c,0x3b,
    0x0a,0x20,0x20,0x64,0x69,0x66,0x66,0x20,0x3d,0x20,0x78,0x5f,0x37,0x30,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x37,0x32,0x20,0x3a,0x20,0x66,0x33,0x32,
    0x20,0x3d,0x20,0x72,0x5f,0x64,0x6f,0x74,0x5f,0x76,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x37,0x33,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x2a,
    0x28,0x73,0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x29,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x37,0x35,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,
    0x20,0x6e,0x5f,0x64,0x6f,0x74,0x5f,0x6c,0x3b,0x0a,0x20,0x20,0x73,0x70,0x65,0x63,
    0x20,0x3d,0x20,0x28,0x70,0x6f,0x77,0x28,0x78,0x5f,0x37,0x32,0x2c,0x20,0x78,0x5f,
    0x37,0x33,0x29,0x20,0x2a,0x20,0x78,0x5f,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x6c,
    0x65,0x74,0x20,0x78,0x5f,0x37,0x38,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,
    0x3d,0x20,0x2a,0x28,0x6c,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x29,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x37,0x39,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x33,0x66,0x20,0x3d,0x20,0x2a,0x28,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x29,0x3b,
    0x0a,0x20,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x5f,0x76,0x20,0x3d,0x20,0x28,
    0x28,0x78,0x5f,0x37,0x38,0x20,0x2a,0x20,0x78,0x5f,0x37,0x39,0x29,0x20,0x2a,0x20,
    0x78,0x5f,0x38,0x32,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x38,
    0x35,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x2a,0x28,0x6c,0x5f,
    0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,
    0x78,0x5f,0x38,0x36,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x2a,
    0x28,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x38,0x38,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x64,0x69,
    0x66,0x66,0x3b,0x0a,0x20,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x76,0x20,
    0x3d,0x20,0x28,0x28,0x78,0x5f,0x38,0x35,0x20,0x2a,0x20,0x78,0x5f,0x38,0x36,0x29,
    0x20,0x2a,0x20,0x78,0x5f,0x38,0x38,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,
    0x78,0x5f,0x39,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x2a,
    0x28,0x6c,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x29,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x39,0x32,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,
    0x20,0x3d,0x20,0x2a,0x28,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x29,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x39,0x34,0x20,0x3a,0x20,0x66,0x33,0x32,
    0x20,0x3d,0x20,0x73,0x70,0x65,0x63,0x3b,0x0a,0x20,0x20,0x73,0x70,0x65,0x63,0x75,
    0x6c,0x61,0x72,0x5f,0x76,0x20,0x3d,0x20,0x28,0x28,0x78,0x5f,0x39,0x31,0x20,0x2a,
    0x20,0x78,0x5f,0x39,0x32,0x29,0x20,0x2a,0x20,0x78,0x5f,0x39,0x34,0x29,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x39,0x36,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x33,0x66,0x20,0x3d,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x5f,0x76,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x39,0x37,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x33,0x66,0x20,0x3d,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x76,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x39,0x39,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x33,0x66,0x20,0x3d,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,0x76,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x30,0x30,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x28,0x28,0x78,0x5f,0x39,0x36,0x20,0x2b,0x20,
    0x78,0x5f,0x39,0x37,0x29,0x20,0x2b,0x20,0x78,0x5f,0x39,0x39,0x29,0x3b,0x0a,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x34,0x66,0x28,0x78,0x5f,
    0x31,0x30,0x30,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x31,0x30,0x30,0x2e,0x79,0x2c,0x20,
    0x78,0x5f,0x31,0x30,0x30,0x2e,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x66,0x6e,0x20,0x67,0x61,0x6d,0x6d,0x61,0x5f,0x76,0x66,0x34,0x5f,
    0x28,0x63,0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,
    0x6e,0x2c,0x20,0x76,0x65,0x63,0x34,0x66,0x3e,0x29,0x20,0x2d,0x3e,0x20,0x76,0x65,
    0x63,0x34,0x66,0x20,0x7b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x33,0x30,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x2a,0x28,0x63,0x29,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x33,0x34,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x33,0x66,0x20,0x3d,0x20,0x70,0x6f,0x77,0x28,0x76,0x65,0x63,0x33,0x66,0x28,
    0x78,0x5f,0x33,0x30,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x33,0x30,0x2e,0x79,0x2c,0x20,
    0x78,0x5f,0x33,0x30,0x2e,0x7a,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x30,
    0x2e,0x34,0x35,0x34,0x35,0x34,0x35,0x34,0x36,0x38,0x30,0x39,0x31,0x39,0x36,0x34,
    0x37,0x32,0x31,0x36,0x38,0x66,0x2c,0x20,0x30,0x2e,0x34,0x35,0x34,0x35,0x34,0x35,
    0x34,0x36,0x38,0x30,0x39,0x31,0x39,0x36,0x34,0x37,0x32,0x31,0x36,0x38,0x66,0x2c,
    0x20,0x30,0x2e,0x34,0x35,0x34,0x35,0x34,0x35,0x34,0x36,0x38,0x30,0x39,0x31,0x39,
    0x36,0x34,0x37,0x32,0x31,0x36,0x38,0x66,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x33,0x38,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x28,
    0x2a,0x28,0x63,0x29,0x29,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x76,0x65,0x63,0x34,0x66,0x28,0x78,0x5f,0x33,0x34,0x2e,0x78,0x2c,0x20,
    0x78,0x5f,0x33,0x34,0x2e,0x79,0x2c,0x20,0x78,0x5f,0x33,0x34,0x2e,0x7a,0x2c,0x20,
    0x78,0x5f,0x33,0x38,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,
    0x6e,0x5f,0x31,0x28,0x29,0x20,0x7b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,
    0x61,0x72,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x32,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,
    0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,
    0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3a,0x20,
    0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x37,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,
    0x76,0x61,0x72,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x39,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,
    0x72,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3a,0x20,0x66,0x33,0x32,
    0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,
    0x78,0x5f,0x31,0x32,0x32,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x20,0x3d,0x20,
    0x66,0x73,0x5f,0x75,0x76,0x30,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x31,0x32,0x33,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x75,0x6e,0x5f,0x74,
    0x65,0x78,0x30,0x2c,0x20,0x75,0x6e,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x30,
    0x2c,0x20,0x78,0x5f,0x31,0x32,0x32,0x29,0x3b,0x0a,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x78,0x5f,0x31,0x32,0x33,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x33,0x31,0x20,0x3a,0x20,0x69,0x33,
    0x32,0x20,0x3d,0x20,0x78,0x5f,0x31,0x32,0x37,0x2e,0x6d,0x61,0x74,0x65,0x72,0x69,
    0x61,0x6c,0x3b,0x0a,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x78,0x5f,0x31,0x33,0x31,
    0x20,0x3e,0x20,0x30,0x69,0x29,0x29,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x31,0x33,0x37,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,
    0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x34,0x34,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x33,0x66,0x20,0x3d,0x20,0x78,0x5f,0x31,0x32,0x37,0x2e,0x6c,0x69,0x67,0x68,
    0x74,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x31,0x35,0x34,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x66,
    0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x78,0x5f,0x31,0x35,0x34,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x35,0x36,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,
    0x78,0x5f,0x31,0x35,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x32,0x20,0x3d,0x20,0x2d,0x28,0x78,0x5f,0x31,0x34,0x34,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x33,0x66,0x28,0x30,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x30,
    0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x31,0x36,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x78,0x5f,
    0x31,0x32,0x37,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,
    0x20,0x78,0x5f,0x31,0x36,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,
    0x78,0x5f,0x31,0x36,0x34,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,
    0x78,0x5f,0x31,0x32,0x37,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,
    0x20,0x3d,0x20,0x78,0x5f,0x31,0x36,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x31,0x36,0x37,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,
    0x3d,0x20,0x78,0x5f,0x31,0x32,0x37,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x73,0x70,
    0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x36,0x20,0x3d,0x20,0x78,0x5f,0x31,0x36,0x37,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x37,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x34,0x66,0x20,0x3d,0x20,0x78,0x5f,0x31,0x32,0x37,0x2e,0x61,0x6d,0x62,0x69,0x65,
    0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x78,0x5f,0x31,0x37,0x31,0x2e,0x78,0x2c,
    0x20,0x78,0x5f,0x31,0x37,0x31,0x2e,0x79,0x2c,0x20,0x78,0x5f,0x31,0x37,0x31,0x2e,
    0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x37,
    0x35,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x78,0x5f,0x31,0x32,
    0x37,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x78,
    0x5f,0x31,0x37,0x35,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x31,0x37,0x35,0x2e,0x79,0x2c,
    0x20,0x78,0x5f,0x31,0x37,0x35,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,
    0x65,0x74,0x20,0x78,0x5f,0x31,0x37,0x39,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,
    0x20,0x3d,0x20,0x78,0x5f,0x31,0x32,0x37,0x2e,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,
    0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x78,0x5f,0x31,0x37,0x39,0x2e,0x78,0x2c,0x20,
    0x78,0x5f,0x31,0x37,0x39,0x2e,0x79,0x2c,0x20,0x78,0x5f,0x31,0x37,0x39,0x2e,0x7a,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x38,0x34,
    0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,0x31,0x32,0x37,0x2e,0x73,
    0x70,0x65,0x63,0x5f,0x70,0x6f,0x77,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x78,0x5f,0x31,0x38,0x34,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x38,0x35,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x70,0x68,0x6f,0x6e,0x67,0x5f,0x76,
    0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x76,
    0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x76,
    0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x66,0x31,0x5f,0x28,0x26,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x29,0x2c,0x20,0x26,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x2c,
    0x20,0x26,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x2c,0x20,0x26,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x2c,0x20,0x26,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x34,0x29,0x2c,0x20,0x26,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x29,0x2c,
    0x20,0x26,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x29,0x2c,0x20,0x26,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x37,0x29,0x2c,0x20,0x26,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x38,0x29,0x2c,0x20,0x26,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x29,0x2c,
    0x20,0x26,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x20,0x3d,0x20,0x78,0x5f,
    0x31,0x38,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,
    0x38,0x37,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x67,0x61,0x6d,
    0x6d,0x61,0x5f,0x76,0x66,0x34,0x5f,0x28,0x26,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x31,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,0x78,0x5f,0x31,0x33,0x37,0x20,0x2a,0x20,
    0x78,0x5f,0x31,0x38,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,
    0x78,0x5f,0x31,0x39,0x30,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,
    0x31,0x32,0x37,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x2e,0x77,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x39,0x33,0x20,0x3a,0x20,0x66,
    0x33,0x32,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,
    0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x77,0x20,0x3d,0x20,0x28,0x78,0x5f,0x31,0x39,0x33,0x20,0x2a,0x20,0x78,
    0x5f,0x31,0x39,0x30,0x29,0x3b,0x0a,0x20,0x20,0x7d,0x20,0x65,0x6c,0x73,0x65,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x39,0x37,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x32,0x30,0x30,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x78,0x5f,
    0x31,0x32,0x37,0x2e,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x30,0x33,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x33,0x66,0x20,0x3d,0x20,0x28,0x28,0x76,0x65,0x63,0x33,0x66,0x28,0x78,0x5f,0x31,
    0x39,0x37,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x31,0x39,0x37,0x2e,0x79,0x2c,0x20,0x78,
    0x5f,0x31,0x39,0x37,0x2e,0x7a,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x33,0x66,0x28,
    0x78,0x5f,0x32,0x30,0x30,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x32,0x30,0x30,0x2e,0x79,
    0x2c,0x20,0x78,0x5f,0x32,0x30,0x30,0x2e,0x7a,0x29,0x29,0x20,0x2a,0x20,0x78,0x5f,
    0x38,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x2e,0x78,0x20,0x3d,0x20,0x78,0x5f,0x32,0x30,0x33,0x2e,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,
    0x79,0x20,0x3d,0x20,0x78,0x5f,0x32,0x30,0x33,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x7a,0x20,0x3d,0x20,
    0x78,0x5f,0x32,0x30,0x33,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x7d,0x0a,0x20,0x20,0x6c,
    0x65,0x74,0x20,0x78,0x5f,0x32,0x31,0x35,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,
    0x20,0x78,0x5f,0x31,0x32,0x37,0x2e,0x75,0x6e,0x5f,0x61,0x6c,0x70,0x68,0x61,0x5f,
    0x74,0x65,0x73,0x74,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x31,
    0x37,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x78,
    0x5f,0x32,0x31,0x35,0x20,0x3e,0x3d,0x20,0x78,0x5f,0x32,0x31,0x37,0x29,0x29,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,
    0x7b,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,
    0x0a,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,0x40,0x66,0x72,0x61,
    0x67,0x6d,0x65,0x6e,0x74,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x28,0x40,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x31,0x29,0x20,0x66,0x73,0x5f,0x75,0x76,
    0x30,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x2c,
    0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x32,0x29,0x20,0x66,0x73,
    0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x28,0x30,0x29,0x20,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x29,0x20,0x2d,
    0x3e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x66,
    0x73,0x5f,0x75,0x76,0x30,0x20,0x3d,0x20,0x66,0x73,0x5f,0x75,0x76,0x30,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x66,0x73,0x5f,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x66,0x73,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,
    0x28,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x69,
    0x6e,0x5f,0x6f,0x75,0x74,0x28,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
#endif /* SOKOL_WGPU */
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before normal.h"
#endif
static inline const sg_shader_desc* normal_program_shader_desc(sg_backend backend) {
  #if defined(SOKOL_GLCORE33)
  if (backend == SG_BACKEND_GLCORE33) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "vs_position";
      desc.attrs[1].name = "vs_normal";
      desc.attrs[2].name = "vs_texcoord0";
      desc.vs.source = normal_vs_source_glsl330;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 192;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "normal_texture_vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 12;
      desc.fs.source = normal_fs_source_glsl330;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 144;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.uniform_blocks[0].uniforms[0].name = "_127.diffuse";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[1].name = "_127.ambient";
      desc.fs.uniform_blocks[0].uniforms[1].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[1].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[2].name = "_127.specular";
      desc.fs.uniform_blocks[0].uniforms[2].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[2].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[3].name = "_127.emissive";
      desc.fs.uniform_blocks[0].uniforms[3].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[3].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[4].name = "_127.light_dir";
      desc.fs.uniform_blocks[0].uniforms[4].type = SG_UNIFORMTYPE_FLOAT3;
      desc.fs.uniform_blocks[0].uniforms[4].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[5].name = "_127.light_diffuse";
      desc.fs.uniform_blocks[0].uniforms[5].type = SG_UNIFORMTYPE_FLOAT3;
      desc.fs.uniform_blocks[0].uniforms[5].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[6].name = "_127.light_ambient";
      desc.fs.uniform_blocks[0].uniforms[6].type = SG_UNIFORMTYPE_FLOAT3;
      desc.fs.uniform_blocks[0].uniforms[6].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[7].name = "_127.light_specular";
      desc.fs.uniform_blocks[0].uniforms[7].type = SG_UNIFORMTYPE_FLOAT3;
      desc.fs.uniform_blocks[0].uniforms[7].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[8].name = "_127.spec_power";
      desc.fs.uniform_blocks[0].uniforms[8].type = SG_UNIFORMTYPE_FLOAT;
      desc.fs.uniform_blocks[0].uniforms[8].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[9].name = "_127.un_alpha_test";
      desc.fs.uniform_blocks[0].uniforms[9].type = SG_UNIFORMTYPE_FLOAT;
      desc.fs.uniform_blocks[0].uniforms[9].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[10].name = "_127.material";
      desc.fs.uniform_blocks[0].uniforms[10].type = SG_UNIFORMTYPE_INT;
      desc.fs.uniform_blocks[0].uniforms[10].array_count = 1;
      desc.fs.images[0].used = true;
      desc.fs.images[0].multisampled = false;
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
      desc.fs.samplers[0].used = true;
      desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
      desc.fs.image_sampler_pairs[0].used = true;
      desc.fs.image_sampler_pairs[0].image_slot = 0;
      desc.fs.image_sampler_pairs[0].sampler_slot = 0;
      desc.fs.image_sampler_pairs[0].glsl_name = "un_tex0_un_sampler0";
      desc.label = "normal_program_shader";
    }
    return &desc;
  }
  #endif /* SOKOL_GLCORE33 */
  #if defined(SOKOL_GLES3)
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "vs_position";
      desc.attrs[1].name = "vs_normal";
      desc.attrs[2].name = "vs_texcoord0";
      desc.vs.source = normal_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 192;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "normal_texture_vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 12;
      desc.fs.source = normal_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 144;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.uniform_blocks[0].uniforms[0].name = "_127.diffuse";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[1].name = "_127.ambient";
      desc.fs.uniform_blocks[0].uniforms[1].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[1].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[2].name = "_127.specular";
      desc.fs.uniform_blocks[0].uniforms[2].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[2].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[3].name = "_127.emissive";
      desc.fs.uniform_blocks[0].uniforms[3].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[3].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[4].name = "_127.light_dir";
      desc.fs.uniform_blocks[0].uniforms[4].type = SG_UNIFORMTYPE_FLOAT3;
      desc.fs.uniform_blocks[0].uniforms[4].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[5].name = "_127.light_diffuse";
      desc.fs.uniform_blocks[0].uniforms[5].type = SG_UNIFORMTYPE_FLOAT3;
      desc.fs.uniform_blocks[0].uniforms[5].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[6].name = "_127.light_ambient";
      desc.fs.uniform_blocks[0].uniforms[6].type = SG_UNIFORMTYPE_FLOAT3;
      desc.fs.uniform_blocks[0].uniforms[6].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[7].name = "_127.light_specular";
      desc.fs.uniform_blocks[0].uniforms[7].type = SG_UNIFORMTYPE_FLOAT3;
      desc.fs.uniform_blocks[0].uniforms[7].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[8].name = "_127.spec_power";
      desc.fs.uniform_blocks[0].uniforms[8].type = SG_UNIFORMTYPE_FLOAT;
      desc.fs.uniform_blocks[0].uniforms[8].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[9].name = "_127.un_alpha_test";
      desc.fs.uniform_blocks[0].uniforms[9].type = SG_UNIFORMTYPE_FLOAT;
      desc.fs.uniform_blocks[0].uniforms[9].array_count = 1;
      desc.fs.uniform_blocks[0].uniforms[10].name = "_127.material";
      desc.fs.uniform_blocks[0].uniforms[10].type = SG_UNIFORMTYPE_INT;
      desc.fs.uniform_blocks[0].uniforms[10].array_count = 1;
      desc.fs.images[0].used = true;
      desc.fs.images[0].multisampled = false;
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
      desc.fs.samplers[0].used = true;
      desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
      desc.fs.image_sampler_pairs[0].used = true;
      desc.fs.image_sampler_pairs[0].image_slot = 0;
      desc.fs.image_sampler_pairs[0].sampler_slot = 0;
      desc.fs.image_sampler_pairs[0].glsl_name = "un_tex0_un_sampler0";
      desc.label = "normal_program_shader";
    }
    return &desc;
  }
  #endif /* SOKOL_GLES3 */
  #if defined(SOKOL_D3D11)
  if (backend == SG_BACKEND_D3D11) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].sem_name = "TEXCOORD";
      desc.attrs[0].sem_index = 0;
      desc.attrs[1].sem_name = "TEXCOORD";
      desc.attrs[1].sem_index = 1;
      desc.attrs[2].sem_name = "TEXCOORD";
      desc.attrs[2].sem_index = 2;
      desc.vs.source = normal_vs_source_hlsl5;
      desc.vs.d3d11_target = "vs_5_0";
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 192;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.source = normal_fs_source_hlsl5;
      desc.fs.d3d11_target = "ps_5_0";
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 144;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.images[0].used = true;
      desc.fs.images[0].multisampled = false;
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
      desc.fs.samplers[0].used = true;
      desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
      desc.fs.image_sampler_pairs[0].used = true;
      desc.fs.image_sampler_pairs[0].image_slot = 0;
      desc.fs.image_sampler_pairs[0].sampler_slot = 0;
      desc.label = "normal_program_shader";
    }
    return &desc;
  }
  #endif /* SOKOL_D3D11 */
  #if defined(SOKOL_METAL)
  if (backend == SG_BACKEND_METAL_MACOS) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.vs.source = normal_vs_source_metal_macos;
      desc.vs.entry = "main0";
      desc.vs.uniform_blocks[0].size = 192;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.source = normal_fs_source_metal_macos;
      desc.fs.entry = "main0";
      desc.fs.uniform_blocks[0].size = 144;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.images[0].used = true;
      desc.fs.images[0].multisampled = false;
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
      desc.fs.samplers[0].used = true;
      desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
      desc.fs.image_sampler_pairs[0].used = true;
      desc.fs.image_sampler_pairs[0].image_slot = 0;
      desc.fs.image_sampler_pairs[0].sampler_slot = 0;
      desc.label = "normal_program_shader";
    }
    return &desc;
  }
  #endif /* SOKOL_METAL */
  #if defined(SOKOL_METAL)
  if (backend == SG_BACKEND_METAL_IOS) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.vs.source = normal_vs_source_metal_ios;
      desc.vs.entry = "main0";
      desc.vs.uniform_blocks[0].size = 192;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.source = normal_fs_source_metal_ios;
      desc.fs.entry = "main0";
      desc.fs.uniform_blocks[0].size = 144;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.images[0].used = true;
      desc.fs.images[0].multisampled = false;
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
      desc.fs.samplers[0].used = true;
      desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
      desc.fs.image_sampler_pairs[0].used = true;
      desc.fs.image_sampler_pairs[0].image_slot = 0;
      desc.fs.image_sampler_pairs[0].sampler_slot = 0;
      desc.label = "normal_program_shader";
    }
    return &desc;
  }
  #endif /* SOKOL_METAL */
  #if defined(SOKOL_METAL)
  if (backend == SG_BACKEND_METAL_SIMULATOR) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.vs.source = normal_vs_source_metal_sim;
      desc.vs.entry = "main0";
      desc.vs.uniform_blocks[0].size = 192;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.source = normal_fs_source_metal_sim;
      desc.fs.entry = "main0";
      desc.fs.uniform_blocks[0].size = 144;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.images[0].used = true;
      desc.fs.images[0].multisampled = false;
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
      desc.fs.samplers[0].used = true;
      desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
      desc.fs.image_sampler_pairs[0].used = true;
      desc.fs.image_sampler_pairs[0].image_slot = 0;
      desc.fs.image_sampler_pairs[0].sampler_slot = 0;
      desc.label = "normal_program_shader";
    }
    return &desc;
  }
  #endif /* SOKOL_METAL */
  #if defined(SOKOL_WGPU)
  if (backend == SG_BACKEND_WGPU) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.vs.source = normal_vs_source_wgsl;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 192;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.source = normal_fs_source_wgsl;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 144;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.images[0].used = true;
      desc.fs.images[0].multisampled = false;
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
      desc.fs.samplers[0].used = true;
      desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
      desc.fs.image_sampler_pairs[0].used = true;
      desc.fs.image_sampler_pairs[0].image_slot = 0;
      desc.fs.image_sampler_pairs[0].sampler_slot = 0;
      desc.label = "normal_program_shader";
    }
    return &desc;
  }
  #endif /* SOKOL_WGPU */
  return 0;
}
static inline int normal_program_attr_slot(const char* attr_name) {
  (void)attr_name;
  if (0 == strcmp(attr_name, "vs_position")) {
    return 0;
  }
  if (0 == strcmp(attr_name, "vs_normal")) {
    return 1;
  }
  if (0 == strcmp(attr_name, "vs_texcoord0")) {
    return 2;
  }
  return -1;
}
static inline int normal_program_image_slot(sg_shader_stage stage, const char* img_name) {
  (void)stage; (void)img_name;
  if (SG_SHADERSTAGE_FS == stage) {
    if (0 == strcmp(img_name, "un_tex0")) {
      return 0;
    }
  }
  return -1;
}
static inline int normal_program_sampler_slot(sg_shader_stage stage, const char* smp_name) {
  (void)stage; (void)smp_name;
  if (SG_SHADERSTAGE_FS == stage) {
    if (0 == strcmp(smp_name, "un_sampler0")) {
      return 0;
    }
  }
  return -1;
}
static inline int normal_program_uniformblock_slot(sg_shader_stage stage, const char* ub_name) {
  (void)stage; (void)ub_name;
  if (SG_SHADERSTAGE_VS == stage) {
    if (0 == strcmp(ub_name, "normal_texture_vs_params")) {
      return 0;
    }
  }
  if (SG_SHADERSTAGE_FS == stage) {
    if (0 == strcmp(ub_name, "normal_texture_fs_params")) {
      return 0;
    }
  }
  return -1;
}
static inline size_t normal_program_uniformblock_size(sg_shader_stage stage, const char* ub_name) {
  (void)stage; (void)ub_name;
  if (SG_SHADERSTAGE_VS == stage) {
    if (0 == strcmp(ub_name, "normal_texture_vs_params")) {
      return sizeof(normal_normal_texture_vs_params_t);
    }
  }
  if (SG_SHADERSTAGE_FS == stage) {
    if (0 == strcmp(ub_name, "normal_texture_fs_params")) {
      return sizeof(normal_normal_texture_fs_params_t);
    }
  }
  return 0;
}
static inline int normal_program_uniform_offset(sg_shader_stage stage, const char* ub_name, const char* u_name) {
  (void)stage; (void)ub_name; (void)u_name;
  if (SG_SHADERSTAGE_VS == stage) {
    if (0 == strcmp(ub_name, "normal_texture_vs_params")) {
      if (0 == strcmp(u_name, "un_mvp")) {
        return 0;
      }
      if (0 == strcmp(u_name, "model")) {
        return 64;
      }
      if (0 == strcmp(u_name, "tex0_mat")) {
        return 128;
      }
    }
  }
  if (SG_SHADERSTAGE_FS == stage) {
    if (0 == strcmp(ub_name, "normal_texture_fs_params")) {
      if (0 == strcmp(u_name, "diffuse")) {
        return 0;
      }
      if (0 == strcmp(u_name, "ambient")) {
        return 16;
      }
      if (0 == strcmp(u_name, "specular")) {
        return 32;
      }
      if (0 == strcmp(u_name, "emissive")) {
        return 48;
      }
      if (0 == strcmp(u_name, "light_dir")) {
        return 64;
      }
      if (0 == strcmp(u_name, "light_diffuse")) {
        return 80;
      }
      if (0 == strcmp(u_name, "light_ambient")) {
        return 96;
      }
      if (0 == strcmp(u_name, "light_specular")) {
        return 112;
      }
      if (0 == strcmp(u_name, "spec_power")) {
        return 124;
      }
      if (0 == strcmp(u_name, "un_alpha_test")) {
        return 128;
      }
      if (0 == strcmp(u_name, "material")) {
        return 132;
      }
    }
  }
  return -1;
}
static inline sg_shader_uniform_desc normal_program_uniform_desc(sg_shader_stage stage, const char* ub_name, const char* u_name) {
  (void)stage; (void)ub_name; (void)u_name;
  #if defined(__cplusplus)
  sg_shader_uniform_desc desc = {};
  #else
  sg_shader_uniform_desc desc = {0};
  #endif
  if (SG_SHADERSTAGE_VS == stage) {
    if (0 == strcmp(ub_name, "normal_texture_vs_params")) {
      if (0 == strcmp(u_name, "un_mvp")) {
        desc.name = "un_mvp";
        desc.type = SG_UNIFORMTYPE_MAT4;
        desc.array_count = 1;
        return desc;
      }
      if (0 == strcmp(u_name, "model")) {
        desc.name = "model";
        desc.type = SG_UNIFORMTYPE_MAT4;
        desc.array_count = 1;
        return desc;
      }
      if (0 == strcmp(u_name, "tex0_mat")) {
        desc.name = "tex0_mat";
        desc.type = SG_UNIFORMTYPE_MAT4;
        desc.array_count = 1;
        return desc;
      }
    }
  }
  if (SG_SHADERSTAGE_FS == stage) {
    if (0 == strcmp(ub_name, "normal_texture_fs_params")) {
      if (0 == strcmp(u_name, "diffuse")) {
        desc.name = "diffuse";
        desc.type = SG_UNIFORMTYPE_FLOAT4;
        desc.array_count = 1;
        return desc;
      }
      if (0 == strcmp(u_name, "ambient")) {
        desc.name = "ambient";
        desc.type = SG_UNIFORMTYPE_FLOAT4;
        desc.array_count = 1;
        return desc;
      }
      if (0 == strcmp(u_name, "specular")) {
        desc.name = "specular";
        desc.type = SG_UNIFORMTYPE_FLOAT4;
        desc.array_count = 1;
        return desc;
      }
      if (0 == strcmp(u_name, "emissive")) {
        desc.name = "emissive";
        desc.type = SG_UNIFORMTYPE_FLOAT4;
        desc.array_count = 1;
        return desc;
      }
      if (0 == strcmp(u_name, "light_dir")) {
        desc.name = "light_dir";
        desc.type = SG_UNIFORMTYPE_FLOAT3;
        desc.array_count = 1;
        return desc;
      }
      if (0 == strcmp(u_name, "light_diffuse")) {
        desc.name = "light_diffuse";
        desc.type = SG_UNIFORMTYPE_FLOAT3;
        desc.array_count = 1;
        return desc;
      }
      if (0 == strcmp(u_name, "light_ambient")) {
        desc.name = "light_ambient";
        desc.type = SG_UNIFORMTYPE_FLOAT3;
        desc.array_count = 1;
        return desc;
      }
      if (0 == strcmp(u_name, "light_specular")) {
        desc.name = "light_specular";
        desc.type = SG_UNIFORMTYPE_FLOAT3;
        desc.array_count = 1;
        return desc;
      }
      if (0 == strcmp(u_name, "spec_power")) {
        desc.name = "spec_power";
        desc.type = SG_UNIFORMTYPE_FLOAT;
        desc.array_count = 1;
        return desc;
      }
      if (0 == strcmp(u_name, "un_alpha_test")) {
        desc.name = "un_alpha_test";
        desc.type = SG_UNIFORMTYPE_FLOAT;
        desc.array_count = 1;
        return desc;
      }
      if (0 == strcmp(u_name, "material")) {
        desc.name = "material";
        desc.type = SG_UNIFORMTYPE_INT;
        desc.array_count = 1;
        return desc;
      }
    }
  }
  return desc;
}
